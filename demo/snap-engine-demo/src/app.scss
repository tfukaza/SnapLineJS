@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@500&family=Tomorrow:wght@400;800&display=swap");

body {
  margin: 0;
  padding: 0;
  background-color: #ffffff;

  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

:root {
  --color-primary: #ff753a;
  --color-secondary: #1e2659;
  --color-accent: #4b403a;
  --color-background: #f6f5f4;
  --color-background-tint: #e7e3e2;
  --color-background-dark: #8b817d;
  --color-text: #453e3a;

  --size-256: 256px;
  --size-128: 128px;
  --size-96: 96px;
  --size-80: 80px;
  --size-64: 64px;
  --size-48: 48px;
  --size-32: 32px;
  --size-24: 24px;
  --size-16: 16px;
  --size-12: 12px;
  --size-8: 8px;
  --size-4: 4px;
  --size-2: 2px;

  --ui-radius: var(--size-8);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-weight: 800;
  font-family: "Tomorrow", sans-serif;
  color: var(--color-text);
}

p,
a,
label {
  font-family: "IBM Plex Mono", monospace;
  font-size: 14px;
  color: var(--color-text);
  font-weight: 500;
  margin: 0;
  margin-bottom: 0.1em;
}

.page-width {
  width: 90%;
  max-width: 1200px;
  margin: 0 auto;
  box-sizing: border-box;
}

.page-column {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  align-items: center;
  justify-content: center;
  gap: var(--size-16);
}

.card {
  --card-border: 1.5px;
  --card-color: var(--color-background);

  padding: var(--size-16);
  border-radius: var(--ui-radius);
  background-color: var(--color-background);
  box-shadow: 0px 4px 12px 0px rgba(0, 0, 0, 0.05);
  position: relative;
  z-index: 1;

  &::before {
    content: "";
    position: absolute;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: var(--ui-radius);
    box-sizing: border-box;
    box-shadow:
      1px 1px 1px 0px rgba(255, 255, 255, 0.18) inset,
      -1px -1px 1px 0px rgba(0, 0, 0, 0.1) inset;
  }

  &::after {
    content: "";
    position: absolute;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: var(--ui-radius);
    box-sizing: border-box;
    border-style: inset;
    border: var(--card-border) solid rgb(255, 255, 255);
    mask-image: linear-gradient(
      to bottom right,
      rgba(0, 0, 0, 0.9) 5%,
      rgba(0, 0, 0, 0) 20%,
      rgba(0, 0, 0, 1) 60%,
      rgba(0, 0, 0, 0) 70%,
      rgba(0, 0, 0, 0.4) 95%
    );
    filter: blur(0.3px);
    background-blend-mode: multiply;
  }

  &.float {
    box-shadow:
      0px 23px 27.8px -11px rgba(61, 52, 76, 0.28),
      0px 0px 20.4px -3px rgba(82, 60, 67, 0.13);
  }
}

.slot {
  border-radius: var(--ui-radius);
  background: radial-gradient(
    109.24% 109.24% at 50% 50%,
    #e2e2e2 0%,
    #e7e0d8 100%
  );
  box-shadow:
    -3px -2px 4px 0px rgba(23, 21, 18, 0.02) inset,
    2px 2px 6.1px -1px rgba(40, 23, 14, 0.31) inset,
    -1px -1px 1px 0px rgba(73, 40, 49, 0.25),
    1px 1px 1px 0px rgba(255, 255, 255, 0.25),
    11px 14px 28.9px -7px rgba(73, 40, 49, 0.25) inset;
}

input[type="checkbox"],
input[type="radio"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

label:has(input[type="checkbox"]),
label:has(input[type="radio"]) {
  display: inline-flex;
  align-items: center;
  gap: var(--size-8);
  cursor: pointer;

  input + span {
    top: 0;
    width: var(--size-16);
    height: var(--size-16);
    border-radius: var(--size-4);
    background-color: #e7e0de;
    box-shadow:
      -0.3px -0.3px 0.5px 0px rgba(73, 40, 49, 0.25),
      0.3px 0.3px 0.5px 0px rgba(255, 255, 255, 0.25),
      1.5px 1.5px 4px 0px rgba(73, 40, 49, 0.25) inset;
    overflow: hidden;
    display: inline-block;
    position: relative;

    &::before,
    &::after {
      position: absolute;
      content: "";
    }
  }
}

label:has(input[type="checkbox"]) {
  input + span {
    &::before {
      left: 16px;
      top: 1px;
      width: calc(var(--size-16) - 2px);
      height: calc(var(--size-16) - 2px);
      border-radius: calc(var(--size-4) - 1px);
      box-shadow:
        0px 0px 1px 0.5px #ffffff6c inset,
        2px 2px 4.1px -1px rgba(48, 41, 58, 0.5);
      box-sizing: border-box;
      background-color: var(--color-primary);
      transition: left 0.05s ease-in;
    }

    &::after {
      left: 20px;
      top: 5px;
      width: calc(var(--size-12) - 6px);
      height: calc(var(--size-12) - 6px);
      border-radius: 1px;
      background-color: var(--color-background-tint);
      box-shadow: 0px 0px 4px -2px rgba(48, 41, 58, 0.5);
      transition:
        left 0.05s ease-in,
        box-shadow 0.05s ease-in;
    }
  }

  input:checked + span {
    &::before {
      left: 1px;
    }
    &::after {
      left: 5px;
      box-shadow: 2px 2px 4px -1px rgba(48, 41, 58, 0.5);
    }
  }
}

label:has(input[type="radio"]) {
  input + span {
    --specular-angle: 120deg;
    border-radius: 50%;

    &::before {
      left: 16px;
      top: calc(var(--size-16) / 4);
      width: calc(var(--size-16) / 2);
      height: calc(var(--size-16) / 2);
      border-radius: 50%;
      box-shadow:
        0px 0px 1px 0.5px #ffffff6c inset,
        2px 2px 4px -1px rgba(48, 41, 58, 0.5);
      box-sizing: border-box;
      background: radial-gradient(
          hsl(from var(--color-primary) h calc(s + 5) calc(l + 5)) 0%,
          hsl(from var(--color-primary) h calc(s + 10) calc(l - 0)) 40%,
          hsla(from var(--color-primary) h calc(s + 15) calc(l - 0) / 0) 50%
        ),
        conic-gradient(
          from var(--specular-angle) at center,
          hsla(from var(--color-primary) h calc(s + 5) calc(l + 5) / 0) 43%,
          hsla(from var(--color-primary) h calc(s - 20) calc(l + 25) / 0.95) 57%,
          hsla(from var(--color-primary) h calc(s + 10) calc(l + 5) / 0) 69%
        ),
        conic-gradient(
          from 120deg at center,
          hsl(from var(--color-primary) h calc(s - 5) calc(l + 5)) 3%,
          hsl(from var(--color-primary) h calc(s - 10) calc(l + 2)) 21%,
          hsl(from var(--color-primary) h calc(s + 5) calc(l - 2)) 43%,
          hsl(from var(--color-primary) h calc(s + 15) calc(l - 12)) 82%,
          hsl(from var(--color-primary) h calc(s - 8) calc(l + 0)) 96%
        );

      transition: left 0.05s ease-in;
    }
  }

  input:checked + span {
    &::before {
      left: calc(var(--size-16) / 4);
    }
  }
}

input[type="range"] {
  --specular-angle: 130deg;

  -webkit-appearance: none;
  padding: var(--size-2);
  border-radius: var(--size-16);
  background: radial-gradient(
    hsl(from var(--color-background) h calc(s + 5) calc(l + 5)) 0%,
    hsl(from var(--color-background) h calc(s + 10) l) 70%
  );
  box-shadow:
    -0.8px -0.8px 0.8px 0px rgba(73, 40, 49, 0.25),
    0.8px 0.8px 0.8px 0px rgba(255, 255, 255, 0.25),
    -3px -2px 4px 0px rgba(23, 21, 18, 0.02) inset,
    2px 2px 6.1px -1px rgba(40, 23, 14, 0.31) inset,
    8px 8px 28px -7px rgba(73, 40, 49, 0.25) inset;
  overflow: hidden;

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: var(--size-12);
    height: var(--size-12);

    border-radius: 50%;
    background: radial-gradient(
        50% 50% at center,
        hsl(from var(--color-primary) h calc(s + 5) calc(l + 5)) 0%,
        hsl(from var(--color-primary) h calc(s + 10) calc(l - 5)) 70%,
        hsla(from var(--color-primary) h calc(s + 15) calc(l - 10) / 0) 80%
      ),
      conic-gradient(
        from var(--specular-angle) at center,
        hsla(from var(--color-primary) h calc(s + 5) calc(l + 5) / 0) 43%,
        hsla(from var(--color-primary) h calc(s - 20) calc(l + 25) / 0.95) 57%,
        hsla(from var(--color-primary) h calc(s + 10) calc(l + 5) / 0) 69%
      ),
      conic-gradient(
        from 120deg at center,
        hsl(from var(--color-primary) h calc(s - 5) calc(l + 5)) 3%,
        hsl(from var(--color-primary) h calc(s - 10) calc(l + 2)) 21%,
        hsl(from var(--color-primary) h calc(s + 5) calc(l - 5)) 31%,
        hsl(from var(--color-primary) h calc(s + 5) calc(l - 2)) 43%,
        hsl(from var(--color-primary) h calc(s + 5) calc(l - 2)) 69%,
        hsl(from var(--color-primary) h calc(s + 8) calc(l - 3)) 76%,
        hsl(from var(--color-primary) h calc(s + 15) calc(l - 12)) 82%,
        hsl(from var(--color-primary) h calc(s - 8) calc(l + 0)) 96%
      );

    box-shadow:
      0px 0px 4px 4px rgba(255, 255, 255, 0.212) inset,
      0px 0px 4px 2px rgba(63, 42, 93, 0.105),
      -4px -4px 4px -6px rgba(255, 255, 255, 0.33),
      2px 2px 4px -0.5px rgba(48, 41, 58, 0.4);
    cursor: pointer;
  }
}

input[type="range"].large {
  &::-webkit-slider-thumb {
    width: var(--size-16);
    height: var(--size-16);
  }
}

button,
.button {
  --button-border: 2px;
  --button-color: var(--color-background);
  --ui-radius: var(--size-4);
  --button-shadow-color: #1e21276e;

  cursor: pointer;
  font-family: "IBM Plex Mono", monospace;
  position: relative;
  border-radius: var(--ui-radius);
  border: none;
  padding: var(--size-4) var(--size-12);
  margin: var(--button-border);
  background: var(--button-color);
  box-shadow: 0px 0px var(--button-border) calc(var(--button-border) / 1)
    var(--button-color);

  &::before {
    content: "";
    position: absolute;
    z-index: -1;
    top: calc(-2 * var(--button-border));
    left: calc(-2 * var(--button-border));
    width: calc(100% + 4 * var(--button-border));
    height: calc(100% + 4 * var(--button-border));
    border-radius: calc(var(--ui-radius) + var(--button-border) * 2);

    box-shadow:
      calc(var(--button-border) * -0.5) calc(var(--button-border) * -0.5) 2px
        0px rgba(0, 28, 61, 0.411) inset,
      0px 0px calc(var(--button-border) / 2) 0px rgb(255, 255, 255) inset,
      -0.2px -0.2px 1px 1px hsl(from var(--button-color) 0 0 calc(l - 30));
    background: linear-gradient(
      to bottom right,
      hsl(from var(--button-color) calc(h - 1) calc(s - 1) calc(l + 1)) 0%,
      hsl(from var(--button-color) h calc(s + 1) calc(l - 1)) 15%,
      hsl(from var(--button-color) calc(h + 5) calc(s - 5) calc(l + 10)) 45%,
      hsl(from var(--button-color) h calc(s) calc(l - 5)) 75%,
      hsl(from var(--button-color) calc(h) calc(s + 1) calc(l - 10)) 100%
    );

    transition: all 0.05s ease-in;
  }

  &::after {
    content: "";
    position: absolute;
    top: calc(-2 * var(--button-border));
    left: calc(-2 * var(--button-border));
    width: calc(100% + 4 * var(--button-border));
    height: calc(100% + 4 * var(--button-border));
    border-radius: calc(var(--ui-radius) + var(--button-border) * 2);
    box-sizing: border-box;
    border-style: inset;
    border: 1.5px solid rgb(255, 255, 255);
    mask-image: linear-gradient(
      to bottom right,
      rgba(0, 0, 0, 0.9) 5%,
      rgba(0, 0, 0, 0) 20%,
      rgba(0, 0, 0, 0) 70%,
      rgba(0, 0, 0, 0.4) 95%
    );
    filter: blur(0.3px);
  }

  &:hover {
    &::before {
      box-shadow:
        calc(var(--button-border) * -0.5) calc(var(--button-border) * -0.5) 2px
          0px rgba(0, 28, 61, 0.411) inset,
        0px 0px calc(var(--button-border)) 0px rgba(49, 34, 59, 0.664) inset,
        -0.2px -0.2px 1px 1px hsl(from var(--button-color) 0 0 calc(l - 30));
    }
    &::after {
      mask-image: linear-gradient(
        to bottom right,
        rgba(0, 0, 0, 0.4) 5%,
        rgba(0, 0, 0, 0) 20%,
        rgba(0, 0, 0, 0) 70%,
        rgba(0, 0, 0, 0.3) 95%
      );
    }
  }

  &.active {
    &::before {
      box-shadow:
        calc(var(--button-border) * 0.5) calc(var(--button-border) * 0.5) 2px
          0px rgba(0, 28, 61, 0.411) inset,
        calc(var(--button-border) * -0.5) calc(var(--button-border) * -0.5) 2px
          0px rgba(255, 255, 255, 0.411) inset,
        0px 0px calc(var(--button-border)) 0px rgba(49, 34, 59, 0.664) inset,
        -0.2px -0.2px 1px 1px hsl(from var(--button-color) 0 0 calc(l - 30));
    }
    &::after {
      mask-image: linear-gradient(
        to bottom right,
        rgba(0, 0, 0, 0.4) 5%,
        rgba(0, 0, 0, 0) 20%,
        rgba(0, 0, 0, 0) 70%,
        rgba(0, 0, 0, 0.9) 95%
      );
    }
  }
}

button,
.button {
  &.primary {
    --button-color: var(--color-primary);
    --button-border: 3px;
    color: #fff;

    &:disabled {
      cursor: not-allowed;
    }
  }

  &.small {
    padding: var(--size-8);
  }
}

input[type="number"],
input[type="text"] {
  font-family: "IBM Plex Mono", monospace;
  user-select: none;

  border: 0px solid #ccc;
  border-radius: var(--ui-radius);
  background-color: #f3f3f3;
  padding: 0px var(--size-8);
  box-sizing: border-box;

  &:focus {
    border: 1px solid #ccc;
  }
}
