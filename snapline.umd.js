!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(t="undefined"!=typeof globalThis?globalThis:t||self).SnapLineJs=s()}(this,(function(){"use strict";var t=Object.defineProperty,s=(s,i,h)=>((s,i,h)=>i in s?t(s,i,{enumerable:!0,configurable:!0,writable:!0,value:h}):s[i]=h)(s,"symbol"!=typeof i?i+"":i,h),i=(t=>(t[t.node=0]="node",t[t.connector=1]="connector",t[t.line=2]="line",t[t.unspecified=3]="unspecified",t[t.inputConnector=4]="inputConnector",t[t.outputConnector=5]="outputConnector",t[t.invalid=6]="invalid",t))(i||{}),h=(t=>(t[t.none=0]="none",t[t.mouseLeft=1]="mouseLeft",t[t.mouseMiddle=2]="mouseMiddle",t[t.mouseRight=3]="mouseRight",t[t.touchSingle=4]="touchSingle",t[t.touchDouble=5]="touchDouble",t[t.invalid=4]="invalid",t))(h||{});class e{constructor(t){s(this,"_dom"),s(this,"_onCursorDown"),s(this,"_onCursorMove"),s(this,"_onCursorUp"),s(this,"_onScroll"),s(this,"_onKeyDown"),s(this,"_prevTouchList"),s(this,"_prevDoubleTouchDistance"),s(this,"_currentCursorState"),this.t=t,t.addEventListener("mouseup",this.onMouseUp.bind(this)),t.addEventListener("mousemove",this.onMouseMove.bind(this)),t.addEventListener("mousedown",this.onMouseDown.bind(this)),t.addEventListener("wheel",this.onWheel.bind(this)),t.addEventListener("keydown",this.onKeyDown.bind(this)),t.addEventListener("touchstart",this.onTouchStart.bind(this)),t.addEventListener("touchmove",this.onTouchMove.bind(this)),t.addEventListener("touchend",this.onTouchEnd.bind(this)),document.addEventListener("mousemove",this.onMouseMove.bind(this)),document.addEventListener("mouseup",this.onMouseUp.bind(this)),this.i=null,this.h=null,this.o=null,this.l=null,this.u=null,this.p=0,this.m=null,this.v=-1}setCursorDownCallback(t){this.i=t}setCursorMoveCallback(t){this.h=t}setCursorUpCallback(t){this.o=t}setScrollCallback(t){this.l=t}convertMouseToCursorState(t){switch(t){case 0:return 1;case 1:return 2;case 2:return 3;default:return 4}}onTouchStart(t){var s,i,h;if(t.touches.length>1){this.m&&1==this.m.length&&(null==(s=this.o)||s.call(this,t,t.target instanceof Element?t.target:null,4,t.touches[0].clientX,t.touches[0].clientY)),this.p=5;const h=t.touches[t.touches.length-2],e=t.touches[t.touches.length-1],n=(h.clientX+e.clientX)/2,o=(h.clientY+e.clientY)/2,r=document.elementFromPoint(n,o);return null==(i=this.i)||i.call(this,t,r,5,n,o),this.m=t.touches,void(this.v=Math.sqrt(Math.pow(h.clientX-e.clientX,2)+Math.pow(h.clientY-e.clientY,2)))}null==(h=this.i)||h.call(this,t,t.target instanceof Element?t.target:null,4,t.touches[0].clientX,t.touches[0].clientY)}onMouseDown(t){var s;null==(s=this.i)||s.call(this,t,t.target instanceof Element?t.target:null,this.convertMouseToCursorState(t.button),t.clientX,t.clientY)}onTouchMove(t){var s,i,h;if(1==t.touches.length){const i=document.elementFromPoint(t.touches[0].clientX,t.touches[0].clientY);return null==(s=this.h)||s.call(this,t,i,4,t.touches[0].clientX,t.touches[0].clientY),void(this.m=t.touches)}if(null==this.m)return void(this.m=t.touches);const e=t.touches[t.touches.length-2],n=t.touches[t.touches.length-1];let o=null,r=null;for(let d=0;d<t.touches.length;d++)e.identifier==this.m[d].identifier?o=this.m[d]:n.identifier==this.m[d].identifier&&(r=this.m[d]);if(null==o||null==r)return;const l=Math.sqrt(Math.pow(e.clientX-n.clientX,2)+Math.pow(e.clientY-n.clientY,2))-this.v,c=(e.clientX+n.clientX)/2,a=(e.clientY+n.clientY)/2,u=document.elementFromPoint(c,a);null==(i=this.h)||i.call(this,t,u,5,c,a),null==(h=this.l)||h.call(this,t,u,5,c,a,l),this.m=t.touches}onMouseMove(t){var s;const i=document.elementFromPoint(t.clientX,t.clientY);null==(s=this.h)||s.call(this,t,i,this.convertMouseToCursorState(t.button),t.clientX,t.clientY)}onTouchEnd(t){var s,i,h;if(this.m&&this.m.length>1){if(null==(s=this.o)||s.call(this,t,t.target instanceof Element?t.target:null,5,t.changedTouches[0].clientX,t.changedTouches[0].clientY),1==t.touches.length)return this.m=t.touches,void(null==(i=this.i)||i.call(this,t,t.target instanceof Element?t.target:null,4,t.touches[0].clientX,t.touches[0].clientY));if(0==t.touches.length)return void(this.m=null)}else null==(h=this.o)||h.call(this,t,t.target instanceof Element?t.target:null,4,t.changedTouches[0].clientX,t.changedTouches[0].clientY)}onMouseUp(t){var s;null==(s=this.o)||s.call(this,t,t.target instanceof Element?t.target:null,this.convertMouseToCursorState(t.button),t.clientX,t.clientY)}onWheel(t){var s;null==(s=this.l)||s.call(this,t,t.target instanceof Element?t.target:null,2,t.clientX,t.clientY,t.deltaY)}onKeyDown(t){var s;null==(s=this.u)||s.call(this,t)}}class n{constructor(t){s(this,"g"),s(this,"gid"),s(this,"positionX"),s(this,"positionY"),s(this,"type"),this.g=t,this.gid=(++t.gid).toString(),this.positionX=0,this.positionY=0,this.type=i.unspecified}bindFunction(t){t.onmousedown=this.domMouseDown.bind(this),t.ontouchstart=this.domTouchStart.bind(this)}domMouseDown(t){this.domCursorDown({button:t.button,clientX:t.clientX,clientY:t.clientY}),t.stopPropagation()}domTouchStart(t){this.domCursorDown({button:0,clientX:t.touches[0].clientX,clientY:t.touches[0].clientY}),t.stopPropagation()}domCursorDown(t){const s=t.button,i=t.clientX,e=t.clientY;0==s?this.g.C=h.mouseLeft:1==s?this.g.C=h.mouseMiddle:2==s&&(this.g.C=h.mouseRight),this.g.targetObject=this,this.g.mousedown_x=i,this.g.mousedown_y=e,this.g.dx=0,this.g.dy=0,this.g.dx_offset=0,this.g.dy_offset=0,this.componentCursorDown(t)}componentCursorDown(t){}domCursorUp(){this.componentCursorUp()}componentCursorUp(){}onFocus(){}offFocus(){}onDrag(){}onPan(){}destroy(){}}class o extends n{constructor(t,i,h){super(h),s(this,"parent"),s(this,"config"),s(this,"dom"),this.config=t,this.parent=i,this.dom=null}}class r extends o{constructor(t,i,h,e){super(i,h,e),s(this,"name"),s(this,"dom"),s(this,"prop"),this.name=i.name,this.prop=h.prop,this.dom=t}bindFunction(t){}addInputUpdateListener(t,s){this.dom.addEventListener(t,s.bind(this))}}class l extends o{constructor(t,h,e,n){super(h,e,n),s(this,"config"),s(this,"name"),s(this,"connectorX"),s(this,"connectorY"),s(this,"connectorTotalOffsetX"),s(this,"_connectorTotalOffsetY"),s(this,"prop"),s(this,"outgoingLines"),s(this,"incomingLines"),s(this,"type",i.connector),s(this,"dom"),s(this,"parent"),this.connectorX=0,this.connectorY=0,this.connectorTotalOffsetX=0,this._=0,this.dom=t,this.parent=e,this.prop=e.prop,this.outgoingLines=[],this.incomingLines=[],this.config=h,n.gid++,this.name=h.name||n.gid.toString(),this.g.globalNodeTable[this.gid]=this,this.dom.setAttribute("sl-gid",this.gid.toString()),this.bindFunction(this.dom)}updateFunction(){}startDragOutLine(){this.outgoingLines.unshift({svg:null,target:null,start:this,connector_x:this.connectorX,connector_y:this.connectorY,x2:0,y2:0,connector:this,requestDelete:!1,completedDelete:!1}),this.parent.outgoingLines.push(this.outgoingLines[0]),this.setAllLinePositions()}runDragOutLine(){let t=9999,s=0,i=0;const h=this.g.hoverDOM;if(0==this.outgoingLines.length)return;const[e,n]=this.g.camera.getWorldDeltaFromCameraDelta(this.g.dx,this.g.dy);if(h&&h.classList.contains("sl-connector")){const o=h.getAttribute("sl-gid");if(!o)return;const r=this.g.globalNodeTable[o];r.updateConnectorPosition(),s=r.connectorX,i=r.connectorY,t=Math.sqrt(Math.pow(this.connectorX+e-s,2)+Math.pow(this.connectorY+n-i,2)),t<40?this.setLineXYPosition(this.outgoingLines[0],s-this.connectorX,i-this.connectorY):this.setLineXYPosition(this.outgoingLines[0],e,n)}else this.setLineXYPosition(this.outgoingLines[0],e,n)}endDragOutLine(){const t=this.g.hoverDOM;if(t&&t.classList.contains("sl-connector")){const s=t.getAttribute("sl-gid");if(!s)return;const i=this.g.globalNodeTable[s];if(0==this.connectToConnector(i))return void this.deleteLine(0);i.prop[i.name]=this.prop[this.name],i.updateFunction(),this.setLineXYPosition(this.outgoingLines[0],i.connectorX-this.connectorX,i.connectorY-this.connectorY)}else this.deleteLine(0)}startPickUpLine(t){this.g.targetObject=t.start,[this.g.dx_offset,this.g.dy_offset]=this.g.camera.getCameraDeltaFromWorldDelta(this.connectorX-t.start.connectorX,this.connectorY-t.start.connectorY),this.g.dx=this.g.dx_offset,this.g.dy=this.g.dy_offset,t.start.disconnectFromConnector(this),this.disconnectFromConnector(t.start),this.deleteLine(this.incomingLines.indexOf(t)),t.start.startDragOutLine()}connectToConnector(t){const s=t.incomingLines.filter((t=>!t.requestDelete));return!s.some((t=>t.start==this))&&(t.config.maxConnectors!==s.length&&(this.updateConnectorPosition(),this.outgoingLines[0].target=t,t.incomingLines.push(this.outgoingLines[0]),t.parent.incomingLines.push(this.outgoingLines[0]),!0))}disconnectFromConnector(t){for(const s of this.outgoingLines)if(s.target==t){s.requestDelete=!0;break}}updateConnectorPosition(){this.connectorX=this.parent.positionX+this.connectorTotalOffsetX,this.connectorY=this.parent.positionY+this._}setLineXYPosition(t,s,i){t.x2=s,t.y2=i}renderLinePosition(t){const s=t.svg;if(!s)return;this.setStyle(s,{position:"absolute",overflow:"visible",pointerEvents:"none",willChange:"transform",transform:`translate3d(${t.connector_x}px, ${t.connector_y}px, 0)`});const i=s.children[0];i.setAttribute("x1","0"),i.setAttribute("y1","0"),i.setAttribute("x2",""+t.x2),i.setAttribute("y2",""+t.y2)}setLinePosition(t){if(t.connector_x=t.start.connectorX,t.connector_y=t.start.connectorY,t.target)this.setLineXYPosition(t,t.target.connectorX-t.start.connectorX,t.target.connectorY-t.start.connectorY);else{const[s,i]=this.g.camera.getWorldDeltaFromCameraDelta(this.g.dx,this.g.dy);this.setLineXYPosition(t,s,i)}}setAllLinePositions(){this.updateConnectorPosition();for(const t of this.outgoingLines)this.setLinePosition(t);for(const t of this.incomingLines)t.start.setLinePosition(t)}updateDOMproperties(){const t=this.dom.getBoundingClientRect();if(!this.parent.dom)return;const s=this.parent.dom.getBoundingClientRect(),[i,h]=this.g.camera.getWorldDeltaFromCameraDelta(t.left-s.left,t.top-s.top),[e,n]=this.g.camera.getWorldDeltaFromCameraDelta(t.width/2,t.height/2);this.connectorTotalOffsetX=i+e,this._=h+n}createLineDOM(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg"),s=document.createElementNS("http://www.w3.org/2000/svg","line");return t.appendChild(s),t.classList.add("sl-connector-svg"),s.classList.add("sl-connector-line"),s.setAttribute("stroke-width","4"),this.g.canvas.appendChild(t),t}setStyle(t,s){if(t)for(const i in s)t.style[i]=s[i]}deleteLine(t){if(0==this.outgoingLines.length)return;const s=this.outgoingLines[t];return s.requestDelete=!0,s}deleteAllLines(){for(const t of this.outgoingLines)t.requestDelete=!0}componentCursorDown(t){const s=this.incomingLines.filter((t=>!t.requestDelete));s.length>0?this.startPickUpLine(s[0]):this.config.allowDragOut&&this.startDragOutLine()}onDrag(){this.runDragOutLine()}componentCursorUp(){this.endDragOutLine(),this.parent.D()}}class c extends n{constructor(t,h){super(h),s(this,"type",i.node),s(this,"nodeType"),s(this,"dom"),s(this,"connectors"),s(this,"components"),s(this,"outgoingLines"),s(this,"incomingLines"),s(this,"nodeWidth",0),s(this,"nodeHeight",0),s(this,"dragStartX",0),s(this,"dragStartY",0),s(this,"freeze"),s(this,"prop"),s(this,"propSetCallback"),s(this,"nodeStyle"),this.nodeType="",this.dom=t,this.connectors={},this.components={},this.outgoingLines=[],this.incomingLines=[],this.dragStartX=this.positionX,this.dragStartY=this.positionY,this.freeze=!1,this.prop={},this.prop=new Proxy(this.prop,{set:(t,s,i)=>{if(t[s=s.toString()]=i,this.propSetCallback[s]&&this.propSetCallback[s](i),s in this.connectors){const t=this.connectors[s].outgoingLines.filter((t=>t.target&&!t.requestDelete)).map((t=>t.target));if(t)for(const s of t)s&&(s.parent.prop[s.name]=i,s.parent.propSetCallback[s.name]&&s.parent.propSetCallback[s.name](i))}return!0}}),this.propSetCallback={},this.setNodeStyle({willChange:"transform",position:"absolute",transformOrigin:"top left"}),this.g.globalNodeList.push(this),this.initNode=this.initNode.bind(this),this.addConnector=this.addConnector.bind(this),this.addInputForm=this.addInputForm.bind(this),this.addPropSetCallback=this.addPropSetCallback.bind(this),this.setRenderNodeCallback=this.setRenderNodeCallback.bind(this),this.setRenderLinesCallback=this.setRenderLinesCallback.bind(this)}initNode(t){this.dom=t,this.dom.id=this.gid,this.renderNode(this.nodeStyle),this.bindFunction(this.dom),new ResizeObserver((()=>{this.updateDOMproperties()})).observe(this.dom)}updateDOMproperties(){if(this.dom){this.nodeHeight=this.dom.offsetHeight,this.nodeWidth=this.dom.offsetWidth;for(const t of Object.values(this.connectors))t.updateDOMproperties()}}setNodeStyle(t){this.nodeStyle=Object.assign({},this.nodeStyle,t)}filterDeletedLines(t){for(let s=0;s<t.length;s++)t[s].requestDelete&&(t.splice(s,1),s--)}M(t){for(const s of t){const t=s.start;if(s.svg){if(s.requestDelete&&!s.completedDelete){this.g.canvas.removeChild(s.svg),s.completedDelete=!0;continue}}else s.svg=t.createLineDOM();s.svg&&(s.connector_x=t.connectorX,s.connector_y=t.connectorY,s.target&&(s.x2=s.target.connectorX-t.connectorX,s.y2=s.target.connectorY-t.connectorY),s.svg.style.transform=`translate3d(${t.connectorX}px, ${t.connectorY}px, 0)`,t.renderLinePosition(s))}this.filterDeletedLines(t)}setRenderLinesCallback(t){this.M=s=>{this.filterDeletedLines(s),t(s)}}D(){this.M(this.outgoingLines);for(const t of this.incomingLines){const s=t.start.parent;s.M(s.outgoingLines)}}renderNode(t){if(this.dom){for(const s in t)"_"!=s[0]&&(this.dom.style[s]=t[s]);t.S?this.dom.classList.add("focus"):this.dom.classList.remove("focus"),this.D()}}setRenderNodeCallback(t){this.renderNode=s=>{t(s),this.D()}}addNodeToCanvas(t,s){this.positionX=t,this.positionY=s,this.nodeWidth=this.dom.offsetWidth,this.nodeHeight=this.dom.offsetHeight,this.setNodeStyle({transform:`translate3d(${this.positionX}px, ${this.positionY}px, 0)`}),this.renderNode(this.nodeStyle),this.updateDOMproperties(),this.g.canvas.appendChild(this.dom)}addConnector(t,s,i=1,h=!0){const e=new l(t,{name:s,maxConnectors:i,allowDragOut:h},this,this.g);return this.connectors[s]=e,this.prop[s]=null,e}addInputForm(t,s){const i=new r(t,{name:s},this,this.g);return this.prop[s]=null,i}addPropSetCallback(t,s){this.propSetCallback[s]=t}setStartPositions(){this.dragStartX=this.positionX,this.dragStartY=this.positionY}componentCursorDown(t){let s=!1;for(let i=0;i<this.g.focusNodes.length;i++)if(this.g.focusNodes[i].gid==this.gid){s=!0;break}if(s)for(let i=0;i<this.g.focusNodes.length;i++)this.g.focusNodes[i].setStartPositions();else{for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].offFocus();this.g.focusNodes=[this],this.onFocus()}this.setStartPositions()}componentCursorUp(){if(this.freeze)return;const[t,s]=this.g.camera.getWorldDeltaFromCameraDelta(this.g.dx,this.g.dy);if(this.positionX=this.dragStartX+t,this.positionY=this.dragStartY+s,!this.g.mouseHasMoved&&this.g.targetObject&&this.g.targetObject.gid==this.gid){for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].offFocus();return this.g.focusNodes=[this],void this.onFocus()}this.renderNode(this.nodeStyle)}onDrag(){if(this.freeze)return;const[t,s]=this.g.camera.getWorldDeltaFromCameraDelta(this.g.dx,this.g.dy);this.positionX=this.dragStartX+t,this.positionY=this.dragStartY+s,this.setNodeStyle({transform:`translate3d(${this.positionX}px, ${this.positionY}px, 0)`});for(const i of Object.values(this.connectors))i.setAllLinePositions();Object.keys(this.connectors).length}onFocus(){this.setNodeStyle({S:!0}),this.renderNode(this.nodeStyle)}offFocus(){this.setNodeStyle({S:!1}),this.renderNode(this.nodeStyle)}evaluate(t){const s=this.connectors[t];if(s)for(const i of s.outgoingLines){const s=i.target;s&&(s.parent.prop[s.name]=this.prop[t],s.updateFunction())}}exec(){}destroy(){var t;null==(t=this.g.canvas)||t.removeChild(this.dom);for(const s of Object.values(this.connectors))s.destroy()}}class a{constructor(t,i){s(this,"containerDom"),s(this,"canvasDom"),s(this,"cameraWidth"),s(this,"cameraHeight"),s(this,"cameraX"),s(this,"cameraY"),s(this,"cameraPanStartX"),s(this,"cameraPanStartY"),s(this,"zoom"),s(this,"canvasStyle"),this.containerDom=t,this.canvasDom=i,this.cameraWidth=t.clientWidth,this.cameraHeight=t.clientHeight,this.cameraX=0,this.cameraY=0,this.cameraPanStartX=0,this.cameraPanStartY=0,this.zoom=1,this.canvasStyle="",this.updateCamera()}worldToCameraMatrix(t,s,i,h,e){return`${i},0,0,0,0,${i},0,0,0,0,1,0,${-t*i+h/2},${-s*i+e/2},0,1`}updateCamera(){const t=this.worldToCameraMatrix(this.cameraX,this.cameraY,this.zoom,this.containerDom.clientWidth,this.containerDom.clientHeight);this.canvasStyle=`matrix3d(${t})`}handleScroll(t,s,i){s-=this.containerDom.offsetLeft,i-=this.containerDom.offsetTop;let h=1*this.zoom*(-t/1e3);this.zoom+h<.2?h=.2-this.zoom:this.zoom+h>1&&(h=1-this.zoom);const e=this.zoom/(this.zoom+h);this.cameraX-=this.cameraWidth/this.zoom*(e-1)*(1-(1.5*this.cameraWidth-s)/this.cameraWidth),this.cameraY-=this.cameraHeight/this.zoom*(e-1)*(1-(1.5*this.cameraHeight-i)/this.cameraHeight),this.zoom+=h,this.updateCamera()}handlePan(t,s){this.cameraX+=t/this.zoom,this.cameraY+=s/this.zoom,this.updateCamera()}handlePanStart(){this.cameraPanStartX=this.cameraX,this.cameraPanStartY=this.cameraY}handlePanDrag(t,s){this.cameraX=-t/this.zoom+this.cameraPanStartX,this.cameraY=-s/this.zoom+this.cameraPanStartY,this.updateCamera()}handlePanEnd(){this.cameraPanStartX=0,this.cameraPanStartY=0}getCameraFromWorld(t,s){return[(t-this.cameraX)*this.zoom+this.cameraWidth/2,(s-this.cameraY)*this.zoom+this.cameraHeight/2]}getWorldFromCamera(t,s){t-=this.containerDom.offsetLeft,s-=this.containerDom.offsetTop;return[(t-this.cameraWidth/2)/this.zoom+this.cameraX,(s-this.cameraHeight/2)/this.zoom+this.cameraY]}getCameraDeltaFromWorldDelta(t,s){return[t*this.zoom,s*this.zoom]}getWorldDeltaFromCameraDelta(t,s){return[t/this.zoom,s/this.zoom]}}return class{constructor(){s(this,"g"),s(this,"_containerStyle",{}),s(this,"_canvasStyle",{}),s(this,"_selectionBoxStyle",{}),s(this,"_backgroundStyle",{}),s(this,"_inputControl",null),this.g=null,this.O={position:"relative",overflow:"hidden"},this.L={position:"absolute",pointerEvents:"none"},this.initSnapLine=this.initSnapLine.bind(this),this.setRenderCanvasCallback=this.setRenderCanvasCallback.bind(this),this.setRenderBackgroundCallback=this.setRenderBackgroundCallback.bind(this),this.setRenderSelectionBoxCallback=this.setRenderSelectionBoxCallback.bind(this)}initSnapLine(t,s,i,n){this.g={canvas:s,canvasContainer:t,canvasBackground:i,selectionBox:n,C:h.none,mousedown_x:0,mousedown_y:0,mouse_x:0,mouse_y:0,mouse_x_world:0,mouse_y_world:0,dx:0,dy:0,dx_offset:0,dy_offset:0,camera:new a(t,s),overrideDrag:!1,targetObject:null,focusNodes:[],hoverDOM:null,gid:0,globalNodeList:[],globalNodeTable:{},mouseHasMoved:!1,ignoreMouseUp:!1,prevTouches:null,prevSingleTouchTime:0,snapline:this},this.k({position:"relative",top:"0px",left:"0px",width:"0px",height:"0px",transform:this.g.camera.canvasStyle}),this.T({width:10*this.g.camera.cameraWidth+"px",height:10*this.g.camera.cameraHeight+"px",transform:`translate(${5*-this.g.camera.cameraWidth}px, ${5*-this.g.camera.cameraHeight}px)`,transformOrigin:"center",zIndex:"0",position:"absolute"}),this.$(this.P),this.N(this.F),this.j(this.L),this.U=new e(t),this.U.setCursorDownCallback(this.onCursorDown.bind(this)),this.U.setCursorMoveCallback(this.onCursorMove.bind(this)),this.U.setCursorUpCallback(this.onCursorUp.bind(this)),this.U.setScrollCallback(this.onZoom.bind(this)),window.requestAnimationFrame(this.step.bind(this))}k(t){this.P=Object.assign({},this.P,t),this.P.B="true"}T(t){this.F=Object.assign({},this.F,t),this.F.B="true"}X(t){this.L=Object.assign({},this.L,t),this.L.B="true"}$(t){for(const s in t)this.g.canvas.style[s]=t[s]}N(t){for(const s in t)this.g.canvasBackground.style[s]=t[s]}j(t){for(const s in t)this.g.selectionBox.style[s]=t[s]}setRenderCanvasCallback(t){this.$=t}setRenderBackgroundCallback(t){this.N=t}setRenderSelectionBoxCallback(t){this.j=t}onCursorDown(t,s,e,n,o){if(this.g.C=e,this.g.targetObject&&this.g.targetObject.type==i.connector){this.g.targetObject.domCursorUp()}const r=this.g;if(!r.overrideDrag){r.C!=h.none&&this.X({width:"0px",height:"0px",left:"0px",top:"0px",pointerEvents:"none",opacity:"0"}),r.focusNodes=[];for(const t of r.globalNodeList)t.offFocus();r.mousedown_x=n,r.mousedown_y=o,e!=h.mouseMiddle&&e!=h.touchDouble||this.g.camera.handlePanStart()}}onCursorMove(t,s,e,n,o){const r=this.g;if(r.hoverDOM=s,r.mouse_x=n-r.canvasContainer.offsetLeft,r.mouse_y=o-r.canvasContainer.offsetTop,[r.mouse_x_world,r.mouse_y_world]=this.g.camera.getWorldFromCamera(r.mouse_x,r.mouse_y),r.dx=n-r.mousedown_x+r.dx_offset,r.dy=o-r.mousedown_y+r.dy_offset,e!=h.none)if(0===r.dx&&0===r.dy||(r.mouseHasMoved=!0),null==r.targetObject){if(r.C==h.mouseMiddle||r.C==h.touchDouble)this.g.camera.handlePanDrag(r.dx,r.dy),this.k({transform:this.g.camera.canvasStyle,cursor:"grabbing"}),this.T({transform:`translate(${this.g.camera.cameraX+5*-this.g.camera.cameraWidth}px, ${this.g.camera.cameraY+5*-this.g.camera.cameraHeight}px)`,backgroundPosition:`${-this.g.camera.cameraX}px ${-this.g.camera.cameraY}px`});else if(r.C==h.mouseLeft||r.C==h.touchSingle){this.X({width:Math.abs(r.dx)+"px",height:Math.abs(r.dy)+"px",left:Math.min(r.mousedown_x,r.mouse_x)+"px",top:Math.min(r.mousedown_y,r.mouse_y)+"px",opacity:"1"});const[t,s]=this.g.camera.getWorldFromCamera(Math.min(r.mousedown_x,r.mouse_x),Math.min(r.mousedown_y,r.mouse_y)),[i,h]=this.g.camera.getWorldFromCamera(Math.max(r.mousedown_x,r.mouse_x),Math.max(r.mousedown_y,r.mouse_y)),e=[];for(const n of r.globalNodeList)n.positionX+n.nodeWidth>t&&n.positionX<i&&n.positionY+n.nodeHeight>s&&n.positionY<h?(n.onFocus(),e.push(n)):n.offFocus();r.focusNodes=e}}else if(r.targetObject.type==i.node)for(const i of r.focusNodes)i.onDrag();else r.targetObject.onDrag()}onCursorUp(t,s,e,n,o){const r=this.g;if(r.ignoreMouseUp)r.ignoreMouseUp=!1;else{if(r.C==h.mouseLeft||r.C==h.touchSingle)if(null==r.targetObject)this.X({width:"0px",height:"0px",left:"0px",top:"0px"});else if(r.targetObject.type==i.node)for(const t of r.focusNodes)t.domCursorUp();else r.targetObject.domCursorUp();else r.C!=h.mouseMiddle&&r.C!=h.touchDouble||this.g.camera.handlePanEnd();r.C=h.none,r.overrideDrag&&this.k({cursor:"default"}),r.overrideDrag=!1,this.k({cursor:"default"}),r.targetObject=null,r.dx=0,r.dy=0,r.dx_offset=0,r.dy_offset=0,r.mouseHasMoved=!1}}onZoom(t,s,i,e,n,o){i===h.mouseMiddle||h.touchDouble,this.g.camera.handleScroll(o,this.g.mouse_x,this.g.mouse_y),this.k({transform:this.g.camera.canvasStyle})}Y(){const t=this.g.targetObject;if(null!=t)if(t.type==i.node)for(const s of this.g.focusNodes)s.renderNode(s.nodeStyle);else if(t.type==i.connector){this.g.targetObject.parent.D()}}step(){this.Y(),this.$(this.P),this.N(this.F),this.j(this.L),window.requestAnimationFrame(this.step.bind(this))}addNodeObject(){const t=new c(null,this.g);return this.g.globalNodeTable[t.gid]=t,[t,this.g.globalNodeTable]}createNode(t){const s=new c(t,this.g);return this.g.globalNodeTable[s.gid]=s,s}addNode(t,s,i){t.addNodeToCanvas(s,i)}addNodeAtMouse(t,s){this.g.ignoreMouseUp=!0;const i=this.g.mouse_x_world,e=this.g.mouse_y_world;this.addNode(t,i,e),t.setStartPositions(),this.g.C=h.mouseLeft,this.g.mousedown_x=this.g.mouse_x,this.g.mousedown_y=this.g.mouse_y,this.g.focusNodes=[t],this.g.targetObject=t;for(const h of this.g.globalNodeList)h.offFocus();this.onCursorMove(s,null,this.g.C,s.clientX,s.clientY)}deleteNode(t){if(!(t in this.g.globalNodeTable))return null;this.g.globalNodeTable[t].destroy();const{[t]:s,...i}=this.g.globalNodeTable;return this.g.globalNodeTable=i,t}focusNode(t){if(!(t in this.g.globalNodeTable))return null;return this.g.globalNodeTable[t].onFocus(),t}}}));
