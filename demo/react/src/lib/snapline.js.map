{"version":3,"file":"snapline.js","sources":["../../../../src/helper.ts","../../../../src/types.ts","../../../../src/components/base.ts","../../../../src/components/component.ts","../../../../src/components/connector.ts","../../../../src/components/node.ts","../../../../src/main.ts"],"sourcesContent":["import { ComponentConfig, GlobalStats } from \"./types\";\n\nfunction isBetween(x: number, a: number, b: number) {\n    return (x >= a && x <= b) || (x >= b && x <= a);\n}\n\n\nfunction worldToCamera(x: number, y: number, g: GlobalStats) {\n    const s1 = g.zoom;\n    const s2 = g.zoom;\n    const t1 = -x * g.zoom + g.cameraWidth / 2;\n    const t2 = -y * g.zoom + g.cameraHeight / 2;\n    return `${s1},0,0,0,0,${s2},0,0,0,0,1,0,${t1},${t2},0,1`;\n}\n\nfunction addLabel(dom: HTMLElement, config: ComponentConfig) {\n    if (config.name === \"\") {\n        return;\n    }\n    const label = document.createElement('span');\n    label.classList.add('sl-label');\n    label.innerText = config.name;\n    //label.style.position = \"relative\";\n    label.style.zIndex = \"99\"\n\n    dom.appendChild(label);\n\n    return label\n}\n\nexport {\n    isBetween,\n    worldToCamera,\n    addLabel\n}","import { Base } from \"./components/base\";\nimport { ConnectorComponent, InputConnector, OutputConnector } from \"./components/connector\";\nimport { NodeComponent } from \"./components/node\";\nimport SnapLine from \"./main\";\n\nexport enum mouseDownButton {\n    none = \"none\",\n    left = \"left\",\n    middle = \"middle\",\n    right = \"right\",\n    invalid = \"invalid\"\n}\n\nexport enum ObjectTypes {\n    node = \"node\",\n    connector = \"connector\",\n    line = \"line\",\n    unspecified = \"unspecified\",\n    invalid = \"invalid\"\n}\n\nexport enum userState {\n    idle = \"idle\",\n    dragging = \"dragging\",\n    panning = \"panning\",\n    connecting = \"connecting\",\n    selecting = \"selecting\",\n    invalid = \"invalid\"\n}\n\nexport enum SnapLineDomType {\n    canvasContainer = 0,\n    canvas = 1,\n    canvasBackground = 2,\n    selectionBox = 3,\n    invalid = 4\n}\n\nexport interface GlobalStats {\n    canvas: HTMLElement,                // Root element \n    canvasContainer: HTMLElement,       // Container for all elements on canvas \n    canvasBackground: HTMLElement,      // Background of canvas\n    selectionBox: HTMLElement,          // Selection box\n\n    currentMouseDown: mouseDownButton,  // Current mouse button being pressed\n    mousedown_x: number,                // Initial mouse  position when mouse is pressed\n    mousedown_y: number,\n    mouse_x: number,                    // Current mouse position, in camera space\n    mouse_y: number,\n    mouse_x_world: number,              // Current mouse position, in world space\n    mouse_y_world: number,\n    dx: number,                         // How much the mouse has moved since being pressed\n    dy: number,\n    dx_offset: number,                  // Offset for dx and dy\n    dy_offset: number,\n\n    camera_x: number,                   // Current camera position\n    camera_y: number,\n    camera_pan_start_x: number,         // Initial camera position when camera is being panned\n    camera_pan_start_y: number,\n    zoom: number,\n    cameraWidth: number,\n    cameraHeight: number,\n\n    overrideDrag: boolean,\n\n    targetObject: Base | null,\n    focusNodes: Array<NodeComponent>,\n    hoverDOM: EventTarget | null,\n    gid: number,\n\n    globalLines: Array<lineObject>,\n    globalNodeList: Array<NodeComponent>,// List of all nodes\n    globalNodeTable: { [key: string]: NodeComponent | ConnectorComponent },\n\n    mouseHasMoved: boolean,\n    ignoreMouseUp: boolean,\n\n    prevTouches: TouchList | null,\n    prevSingleTouchTime: number,\n\n\n    snapline: SnapLine,\n}\n\nexport type NodeConfigFunction = Array<{\n    name: string;\n    inputs: Array<string>;\n    outputs: Array<string>;\n    functionInit?: Function;\n    functionUpdate: Function;\n}>;\n\n\n// export interface NodeConfig {\n//     functions: NodeConfigFunction;\n//     elements: Array<Array<ComponentConfig> | ComponentConfig>;\n// }\n\nexport interface ComponentConfig {\n    name: string;\n    // type: comType;\n    // [key: string]: any;\n}\n\nexport type inputType = \"input-text\" | \"input-bool\" | \"input-float\" | \"input-float-infinite\";\nexport type uiType = \"ui-paragraph\" | \"ui-display\" | \"ui-dropdown\";\nexport type outputType = \"output-text\";\nexport type comType = inputType | uiType | outputType | \"custom\"\n\nexport interface lineObject {\n    svg: SVGSVGElement | null,\n    to: InputConnector;\n    from: OutputConnector;\n    connector_x: number;\n    connector_y: number;\n    x2: number;\n    y2: number;\n    connector: OutputConnector;\n}\n\nexport interface customCursorDownProp {\n    button: number;\n    clientX: number;\n    clientY: number;\n}","\nimport { GlobalStats, ObjectTypes, customCursorDownProp, mouseDownButton } from \"../types\"\n\n/**\n * Base class for all classes.\n * It contains attributes and methods that are common to all classes,\n * such as position, id, etc.\n*/\nexport abstract class Base {\n\n    g: GlobalStats;\n    gid: string;\n    position_x: number;\n    position_y: number;\n    type: ObjectTypes;\n\n    constructor(globals: GlobalStats) {\n        this.g = globals;\n\n        globals.gid++;\n        this.gid = globals.gid.toString();\n\n        this.position_x = 0;\n        this.position_y = 0;\n\n        this.type = ObjectTypes.unspecified;\n\n    }\n\n    /**\n     * Binds the mousedown event to the given DOM element.\n     * This overrides the default mousedown event.\n     * \n     * @param dom The DOM element to bind the function to\n     */\n    bindFunction(dom: HTMLElement) {\n        dom.onmousedown = this.domMouseDown.bind(this);\n        dom.ontouchstart = this.domTouchStart.bind(this);\n    }\n\n    domMouseDown(e: MouseEvent): void {\n        this.domCursorDown(e.button, e.clientX, e.clientY);\n        e.stopPropagation();\n    }\n    domTouchStart(e: TouchEvent): void {\n        // if (this.g.prevSingleTouchTime == 0) {\n        //     this.g.timer = setTimeout(() => {\n        //         this.g.timer = null;\n        //         this.g.prevSingleTouchTime = 0;\n        //         this.domCursorDown(0, e.touches[0].clientX, e.touches[0].clientY);\n        //         e.stopPropagation();\n        //     }\n        //         , 300);\n        //     this.g.prevSingleTouchTime = Date.now();\n        //     //return;\n\n        // }\n        this.domCursorDown(0, e.touches[0].clientX, e.touches[0].clientY);\n        e.stopPropagation();\n    }\n\n    domCursorDown(button: number, clientX: number, clientY: number): void {\n\n        console.debug(`Base class mousedown event triggered on ${this.gid}!`);\n\n        if (button == 0) {\n            this.g.currentMouseDown = mouseDownButton.left;\n        } else if (button == 1) {\n            this.g.currentMouseDown = mouseDownButton.middle;\n        } else if (button == 2) {\n            this.g.currentMouseDown = mouseDownButton.right;\n        }\n\n        this.g.targetObject = this;\n        this.g.mousedown_x = clientX;\n        this.g.mousedown_y = clientY;\n        this.g.dx = 0;\n        this.g.dy = 0;\n        this.g.dx_offset = 0;\n        this.g.dy_offset = 0;\n\n\n\n        this.customCursorDown({ button: button, clientX: clientX, clientY: clientY });\n\n    }\n    customCursorDown(_: customCursorDownProp): void { }\n\n    domCursorUp(): void { }\n    onFocus(): void { }\n    offFocus(): void { }\n    onDrag(): void { }\n    onPan(): void { }\n\n    destroy(): void { }\n}\n\n","import { ComponentConfig, GlobalStats } from '../types';\nimport { NodeComponent } from './node';\nimport { Base } from './base';\n\n/**\n * Components are the buildings blocks of a node.\n */\nexport class ComponentBase extends Base {\n\n    parent: NodeComponent | null;\n    config: ComponentConfig;\n    dom: HTMLElement | null;\n\n    constructor(config: ComponentConfig, parent: NodeComponent | null, globals: GlobalStats) {\n        super(globals);\n        this.config = config;\n        this.parent = parent\n        this.dom = null;\n    }\n}\n\n/**\n * InputForms are any components that take input from the user, such as text fields, sliders, etc.\n */\nclass InputForm extends ComponentBase {\n\n    name: string;                   /* Name of the component */\n    dom: HTMLElement;               /* The DOM element of the component */\n    prop: { [key: string]: any };   /* Reference to the parent's prop object */\n\n    constructor(dom: HTMLElement, config: ComponentConfig, parent: NodeComponent, globals: GlobalStats) {\n        super(config, parent, globals);\n        this.name = config.name;\n        this.prop = parent.prop;\n        this.dom = dom;\n    }\n\n    bindFunction(_: HTMLElement): void {\n\n    }\n\n    addInputUpdateListener(event: string, func: (value: any) => void) {\n        this.dom.addEventListener(event,\n            func.bind(this));\n    }\n\n}\n\nexport {\n    InputForm\n}\n","\nimport { ComponentConfig, GlobalStats, ObjectTypes, customCursorDownProp, lineObject } from \"../types\";\nimport { ComponentBase } from \"./component\";\nimport { NodeComponent } from \"./node\";\n\n\n/**\n * Connector components are the elements that are used to connect nodes.\n */\nclass ConnectorComponent extends ComponentBase {\n\n    name: string;                   /* Name of the component */\n\n    connector_x: number;            /* Location of the connector on canvas */\n    connector_y: number;\n    c_total_offset_x: number;       /* Location of the connector relative to the location of parent Node */\n    c_total_offset_y: number;\n\n    prop: { [key: string]: any };   /* Reference to the parent's prop object */\n\n    // tmpSvgDom: SVGSVGElement | null;\n    // tmpSvgData: lineObject | null;\n    svgLines: Array<lineObject>;\n    type: ObjectTypes = ObjectTypes.connector;\n\n\n    constructor(dom: HTMLElement, config: ComponentConfig, parent: NodeComponent, globals: GlobalStats) {\n        super(config, parent, globals);\n\n        this.connector_x = 0;\n        this.connector_y = 0;\n\n        this.c_total_offset_x = 0;\n        this.c_total_offset_y = 0;\n\n        this.dom = dom;\n        this.parent = parent;\n        this.prop = parent.prop;\n\n\n        if (config.name) {\n            this.name = config.name;\n        } else {\n            globals.gid++;\n            this.name = globals.gid.toString();\n        }\n        this.g.globalNodeTable[this.gid] = this;\n\n        this.bindFunction(this.dom);\n\n        this.dom.setAttribute('sl-gid', this.gid.toString());\n\n        // this.tmpSvgDom = null;\n        // this.tmpSvgData = null;\n\n        this.svgLines = [];\n\n\n\n\n    }\n\n    pxToInt(px: string): number {\n        return parseInt(px.substring(0, px.length - 2));\n    }\n\n    getComputed(element: HTMLElement, prop: string) {\n        const s = window.getComputedStyle(element, null).getPropertyValue(prop);\n        if (s.endsWith('px')) return this.pxToInt(s);\n        else return parseInt(s);\n    }\n\n    updateDOMproperties() {\n        let parentDOM = this.dom;\n        let p = parentDOM!.getBoundingClientRect();\n        let p1 = this.parent!.dom.getBoundingClientRect();\n        this.c_total_offset_x = (p.left - p1.left) / this.g.zoom + p.width / 2 / this.g.zoom;\n        this.c_total_offset_y = (p.top - p1.top) / this.g.zoom + p.height / 2 / this.g.zoom;\n    }\n\n\n    /* SVG line functions */\n\n\n    createLineDOM(x: number, y: number): SVGSVGElement {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        svg.appendChild(line);\n        this.g.canvas!.appendChild(svg);\n        this.setLineAttr(svg, line, x, y);\n        return svg;\n    }\n\n\n    setLineAttr(svg: SVGSVGElement, line: SVGLineElement, x: number, y: number) {\n        svg.classList.add('sl-connector-svg');\n        // svg.setAttribute('output-gid', this.g.gid.toString());\n        // this.setTmpSvgLineStyle({\n        //     position: 'absolute',\n        //     overflow: 'visible',\n        //     pointerEvents: 'none',\n        //     willChange: 'transform',\n        //     transform: `translate3d(${x}px, ${y}px, 0)`,\n        // });\n        // svg.setAttribute('width', '4');\n        // svg.setAttribute('height', '4');\n\n        line.classList.add('sl-connector-line');\n        line.setAttribute('stroke-width', '4');\n    }\n\n    setStyle(dom: HTMLElement, style: any) {\n        for (const key in style) {\n            dom.style[<any>key] = style[key];\n        }\n    }\n\n    renderLinePosition(entry: lineObject) {\n\n        let svg = entry.svg;\n        this.setStyle(svg!, {\n            position: 'absolute',\n            overflow: 'visible',\n            pointerEvents: 'none',\n            willChange: 'transform',\n            transform: `translate3d(${entry.connector_x}px, ${entry.connector_y}px, 0)`,\n        });\n        let line = svg.children[0] as SVGLineElement;\n        line.setAttribute('x1', '' + 0);\n        line.setAttribute('y1', '' + 0);\n        line.setAttribute('x2', '' + entry.x2);\n        line.setAttribute('y2', '' + entry.y2);\n    }\n\n\n    // setTmpSvgLineStyle(style: any) {\n    //     for (const key in style) {\n    //         this.tmpSvgDom!.style[<any>key] = style[key];\n    //     }\n    // }\n\n    /* Deletes the line from the svgLines array */\n    deleteLine(i: number): lineObject | undefined {\n        // if (this.svgLines.length > 0) {\n        //     const svg = this.svgLines[i];\n        //     this.svgLines.splice(i, 1);\n        //     return svg;\n        // }\n        // return undefined;\n        if (this.svgLines.length > 0) {\n            const svg = this.svgLines[i];\n            svg.requestDelete = true;\n        }\n        return undefined;\n    }\n\n    deleteAllLines() {\n        // let tmpLines = [...this.svgLines];\n        // this.svgLines = [];\n        // return tmpLines;\n        for (const svg of this.svgLines) {\n            svg.requestDelete = true;\n        }\n    }\n\n\n}\n\n\nclass InputConnector extends ConnectorComponent {\n\n    //inputDOM: HTMLElement | null;       // Reference to the UI element where the user enters the value\n    // inter: InputInterface;\n    peerOutput: OutputConnector | null;\n    updateFunction: Function = () => {\n        console.debug(\"Update function not set for input connector\");\n    };\n\n    constructor(dom: HTMLElement, config: ComponentConfig, parent: NodeComponent, globals: GlobalStats) {\n\n        super(dom, config, parent, globals);\n\n        // this.inter = inter;\n\n\n        this.peerOutput = null;\n\n        // const connector = document.createElement('span');\n        // connector.classList.add('sl-input-connector');\n        // connector.id = `input-${this.gid}`;\n\n        // connector.onmousedown = this.domMouseDown.bind(this);\n        // connector.ontouchstart = this.domTouchStart.bind(this);\n\n        //this.dom = dom;\n    }\n\n    renderAllLines(svgLines: Array<lineObject>, deletedLines: Array<lineObject> = [], newLines: Array<lineObject> = [], updatedLines: Array<lineObject> = []) {\n        this.peerOutput?.renderAllLines(svgLines, deletedLines, newLines, updatedLines);\n    }\n\n    domTouchStart(e: TouchEvent): void {\n        this.domCursorDown(0, e.touches[0].clientX, e.touches[0].clientY);\n        e.stopPropagation();\n    }\n\n    domMouseDown(e: MouseEvent): void {\n        this.domCursorDown(e.button, e.clientX, e.clientY);\n        e.stopPropagation();\n    }\n\n    domCursorDown(button: number, clientX: number, clientY: number): void {\n        if (this.peerOutput) {\n            super.domCursorDown(button, clientX, clientY);\n            // Hand over control to the peer output\n            this.g.targetObject = this.peerOutput;\n\n            this.g.dx_offset = (this.connector_x - this.peerOutput.connector_x) * this.g.zoom;\n            this.g.dy_offset = (this.connector_y - this.peerOutput.connector_y) * this.g.zoom;\n            this.g.dx = this.g.dx_offset;\n            this.g.dy = this.g.dy_offset;\n            this.peerOutput.customCursorDown({ button: button, clientX: clientX, clientY: clientY });\n            this.peerOutput.disconnectFromInput(this);\n\n        }\n    }\n\n    updateConnectorPosition() {\n        this.connector_x = this.parent!.position_x + this.c_total_offset_x;\n        this.connector_y = this.parent!.position_y + this.c_total_offset_y;\n    }\n\n    disconnectFromOutput() {\n        this.peerOutput = null;\n        // this.inter.dom!.classList.remove(\"connected\");\n        // this.inter.inputUI?.inputDOM?.setAttribute('disabled', 'false');\n    }\n\n    connectToOutput(output: OutputConnector) {\n        this.peerOutput = output;\n        // this.inter.dom?.classList.add(\"connected\");\n        // this.inter.inputUI?.inputDOM?.setAttribute('disabled', 'true');\n    }\n\n    nodeDrag() {\n        this.updateConnectorPosition();\n        if (!this.peerOutput) {\n            return;\n        }\n        this.peerOutput.nodeDrag();\n    }\n\n    destroy(): void {\n        if (this.peerOutput) {\n            this.peerOutput.disconnectFromInput(this);\n        }\n\n\n    }\n\n}\n\n\nclass OutputConnector extends ConnectorComponent {\n\n    val: any;\n\n    peerInputs: Array<InputConnector> = [];\n\n    constructor(dom: HTMLElement, config: ComponentConfig, parent: NodeComponent, globals: GlobalStats) {\n        super(dom, config, parent, globals);\n\n        this.val = null;\n\n        this.svgLines = [];\n\n\n        this.dom = dom;\n\n        this.renderAllLines = this.renderAllLines.bind(this);\n    }\n\n\n\n    connectToInput(input: InputConnector) {\n        // Already connected, do nothing\n        console.debug(\"Connecting to input: \", input);\n        if (this === input.peerOutput) {\n            console.debug(\"Already connected\");\n            return;\n        }\n\n        // If there is something already connected to the input, disconnect it\n        if (input.peerOutput) {\n            console.debug(\"Disconnecting from: \", input.peerOutput);\n            input.peerOutput.disconnectFromInput(input);\n            input.disconnectFromOutput();\n        }\n\n        console.debug(\"Now connecting to: \", input);\n        input.connectToOutput(this);\n        this.peerInputs.push(input);\n\n        this.updateConnectorPosition();\n\n        //const [svg, line] = this.createTmpSvgLine(this.connector_x, this.connector_y);\n\n        // let newSVG = {\n        //     svg: null,\n        //     line: null,\n        //     to: input,\n        //     from: this,\n        //     connector_x: this.connector_x,\n        //     connector_y: this.connector_y,\n        //     x2: 0,\n        //     y2: 0,\n        //     connector: this\n        // };\n\n        this.svgLines[0].to = input;\n        this.g.globalLines.push(this.svgLines[0]);\n\n        // this.renderAllLines(this.svgLines);\n\n    }\n\n    disconnectFromInput(input: InputConnector) {\n        console.debug(\"Disconnecting from input: \", input);\n        for (const svg of this.svgLines) {\n            if (svg.to == input) {\n                this.g.canvas!.removeChild(svg.svg);\n                this.svgLines = this.svgLines.filter(s => s != svg);\n                this.g.globalLines = this.g.globalLines.filter(s => s != svg);\n                console.debug(\"Deleted line: \", svg);\n                break;\n            }\n        }\n        input.disconnectFromOutput();\n        // Remove the input from the peerInputs array using gid as key\n        this.peerInputs = this.peerInputs.filter(i => i.gid != input.gid);\n    }\n\n    updateConnectorPosition() {\n        // Update the position of the output connector\n        this.connector_x = this.parent!.position_x + this.c_total_offset_x;\n        this.connector_y = this.parent!.position_y + this.c_total_offset_y;\n    }\n\n    setLineXYPosition(entry: lineObject, x: number, y: number) {\n        entry.x2 = x;\n        entry.y2 = y;\n    }\n\n    refreshLinePosition(entry: lineObject) {\n\n        entry.connector_x = this.connector_x;\n        entry.connector_y = this.connector_y;\n        if (!entry.to) {\n            entry.x2 = 0;\n            entry.y2 = 0;\n        } else {\n            entry.x2 = (entry.to.connector_x - this.connector_x);\n            entry.y2 = (entry.to.connector_y - this.connector_y);\n        }\n    }\n\n    /* Called when lines need to be updated */\n    refreshAllLinePositions() {\n        this.updateConnectorPosition();\n        for (const svgEntry of this.svgLines) {\n            this.refreshLinePosition(svgEntry);\n        }\n    }\n\n    renderAllLines(\n        svgLines: Array<lineObject>,\n        deletedLines: Array<lineObject> = [],\n        newLines: Array<lineObject> = [],\n        updatedLines: Array<lineObject> = []\n    ) {\n        for (const svg of newLines) {\n            let svgDom = this.createLineDOM(svg.connector_x, svg.connector_y);\n            svg.svg = svgDom;\n            this.renderLinePosition(svg);\n        }\n\n        for (const svg of deletedLines) {\n            this.g.canvas!.removeChild(<Node>svg.svg!);\n        }\n\n        for (const svg of updatedLines) {\n            this.renderLinePosition(svg);\n        }\n        // if (this.tmpSvgDom) {\n        //     this.setTmpSvgLineStyle({\n        //         transform: `translate3d(${this.connector_x}px, ${this.connector_y}px, 0)`,\n        //     });\n        // }\n\n        if (deletedLines.length > 0 || newLines.length > 0 || updatedLines.length > 0) {\n            return;\n        }\n\n        for (const svgEntry of svgLines) {\n            if (!svgEntry.svg) {\n                let svgDom = this.createLineDOM(svgEntry.connector_x, svgEntry.connector_y);\n                svgEntry.svg = svgDom;\n            } else if (svgEntry.requestDelete) {\n                this.g.canvas!.removeChild(<Node>svgEntry.svg!);\n                continue;\n            }\n\n            svgEntry.connector_x = this.connector_x;\n            svgEntry.connector_y = this.connector_y;\n            if (svgEntry.to) {\n                svgEntry.x2 = (svgEntry.to.connector_x - this.connector_x);\n                svgEntry.y2 = (svgEntry.to.connector_y - this.connector_y);\n            }\n            svgEntry.svg!.style.transform = `translate3d(${this.connector_x}px, ${this.connector_y}px, 0)`;\n            this.renderLinePosition(svgEntry);\n        }\n    }\n\n    /* Called when a user clicks on the output connector */\n    customCursorDown(_: customCursorDownProp) {\n\n        console.debug(`ConnectorComponent mousedown event triggered on ${this.gid}!`);\n\n        let tmpData = {\n            svg: null,\n            to: null,\n            from: this,\n            connector_x: this.connector_x,\n            connector_y: this.connector_y,\n            x2: 0,\n            y2: 0,\n            connector: this,\n            requestDelete: false\n        };\n        // Insert the temporary line into the svgLines array at index 0\n        this.svgLines.unshift(tmpData);\n        this.g.targetObject = this;\n\n        this.refreshAllLinePositions();\n        //this.renderAllLines(this.svgLines, [], [this.svgLines[0]]);\n\n    }\n\n    /* Called when the user drags the lines extending from the output connector */\n    onDrag() {\n\n        let distance = 9999;\n        let connector_x = 0;\n        let connector_y = 0;\n        const hn: HTMLElement | null = <HTMLElement>this.g.hoverDOM;\n\n        // If the node has a class of \"sl-input-connector\", then it is an input connector\n        if (hn && hn.classList.contains('sl-input-connector')) {\n            const gid = hn.getAttribute('sl-gid');\n            if (!gid) return;\n            console.debug(\"Hovering over input connector: \", gid);\n            const input = <InputConnector>this.g.globalNodeTable[gid];\n            input.updateConnectorPosition();    /* Update the position of the input connector to the latest position. Not needed? */\n            connector_x = input.connector_x;\n            connector_y = input.connector_y;\n            distance = Math.sqrt(Math.pow(this.connector_x + this.g.dx / this.g.zoom - connector_x, 2) + Math.pow(this.connector_y + this.g.dy / this.g.zoom - connector_y, 2));\n\n            /* Handle snapping to the input connector */\n            if (distance < 40) {\n                this.setLineXYPosition(this.svgLines[0], (connector_x - this.connector_x), (connector_y - this.connector_y));\n            } else {\n                this.setLineXYPosition(this.svgLines[0], this.g.dx / this.g.zoom, this.g.dy / this.g.zoom);\n            }\n        } else {\n            this.setLineXYPosition(this.svgLines[0], this.g.dx / this.g.zoom, this.g.dy / this.g.zoom);\n        }\n\n        console.debug(`Distance: ${distance}`);\n        // this.renderAllLines(this.svgLines, [], [], [this.svgLines[0]]);\n    }\n\n\n    nodeDrag() {\n        this.refreshAllLinePositions();\n        // return this.renderAllLines(this.svgLines, [], [], this.svgLines);\n    }\n\n    /* Called when the user releases the mouse button */\n    domCursorUp(): void {\n        console.debug(`connector domMouseUp`);\n        const hn: HTMLElement | null = <HTMLElement>this.g.hoverDOM;\n        if (hn && hn.classList.contains('sl-input-connector')) {\n            const gid = hn.getAttribute('sl-gid');\n            console.debug(\"Connected to input connector: \", gid);\n            if (!gid) {\n                console.error(`Error: gid is null`);\n                return;\n            }\n            const input = <InputConnector>this.g.globalNodeTable[gid];\n            this.connectToInput(input);\n\n            input.prop[input.name] = this.prop[this.name];  /* Logically connect the input to the output */\n            input.updateFunction();                         /* Update the input */\n\n            this.setLineXYPosition(this.svgLines[0], (input.connector_x - this.connector_x), (input.connector_y - this.connector_y));\n            // this.renderAllLines(this.svgLines, [], [], [this.svgLines[0]]);\n        } else {\n            let delLine = this.deleteLine(0);\n            if (delLine) {\n                // this.renderAllLines(this.svgLines, [delLine]);\n                delLine.requestDelete = true;\n            }\n        }\n    }\n\n    getValue() {\n        this.parent!.exec();\n        return this.val;\n    }\n\n    destroy() {\n\n        for (const input of this.peerInputs) {\n            this.disconnectFromInput(input);\n        }\n        //let deletedLines = this.deleteAllLines();\n        //this.renderAllLines(this.svgLines, deletedLines);\n\n    }\n}\n\nexport {\n    ConnectorComponent,\n    InputConnector,\n    OutputConnector\n}\n","import { isBetween } from '../helper';\nimport { Base } from './base';\nimport { GlobalStats, lineObject, ObjectTypes, customCursorDownProp } from '../types';\nimport { InputConnector, OutputConnector } from './connector';\nimport { InputForm } from './component';\nimport { ComponentBase } from './component';\n\n\nclass NodeComponent extends Base {\n\n    inputConnectors: { [key: string]: InputConnector };     // Dictionary of InputConnector classes for each input connector\n    outputConnectors: { [key: string]: OutputConnector };   // Dictionary of OutputConnector classes for each output connector\n    outputCount: number;\n\n    components: { [key: string]: ComponentBase };           // List iof all components in the node, except for connectors\n\n    dom: HTMLElement | null;                                // The DOM element of the node \n\n    nodeWidth: number = 0;\n    nodeHeight: number = 0;\n\n    panStartX: number;\n    panStartY: number;\n\n    overlapping: lineObject | null;\n    freeze: boolean;\n    type: ObjectTypes;\n\n    prop: { [key: string]: any };\n    outputProp: { [key: string]: any };\n\n    nodeType: string;\n    nodeStyle: any;\n\n    constructor(dom: HTMLElement | null, globals: GlobalStats) {\n\n        super(globals);\n\n        this.dom = null;\n\n        this.inputConnectors = {};\n        this.outputConnectors = {};\n        this.outputCount = 0;\n        this.components = {};\n\n        this.panStartX = this.position_x;\n        this.panStartY = this.position_y;\n        this.overlapping = null;\n        this.freeze = false;\n        this.type = ObjectTypes.node;\n\n        if (dom) {\n            this.dom = dom;\n            this.dom.id = this.gid;\n\n            this.setNodeStyle({\n                willChange: \"transform\",\n                position: \"absolute\",\n                transformOrigin: \"top left\"\n            });\n            this.renderNode(this.nodeStyle);\n\n            this.bindFunction(this.dom);\n            new ResizeObserver(() => {\n                this.updateDOMproperties();\n            }).observe(this.dom);\n        }\n\n        this.g.globalNodeList.push(this);\n\n        this.prop = {};\n        this.outputProp = {}\n        this.prop = new Proxy(this.prop, {\n            set: (target, prop, value) => {\n                prop = prop.toString();\n                target[prop] = value;\n                if (prop in this.outputProp) {\n                    this.evaluate(prop);\n                }\n\n                return true;\n            },\n            get: (target, prop) => {\n                prop = prop.toString();\n                return target[prop];\n            }\n\n        });\n\n        this.nodeType = \"\";\n\n        this.initNode = this.initNode.bind(this);\n        this.addInputConnector = this.addInputConnector.bind(this);\n        this.addOutputConnector = this.addOutputConnector.bind(this);\n        this.addInputForm = this.addInputForm.bind(this);\n\n        this.setNodeStyle({\n            willChange: \"transform\",\n            position: \"absolute\",\n            transformOrigin: \"top left\"\n        });\n    }\n\n\n    initNode(dom: HTMLElement) {\n        this.dom = dom;\n        this.dom.id = this.gid;\n\n        this.renderNode(this.nodeStyle);\n\n        this.bindFunction(this.dom);\n        new ResizeObserver(() => {\n            this.updateDOMproperties();\n        }).observe(this.dom);\n    }\n\n    setNodeStyle(style: any) {\n        this.nodeStyle = Object.assign({}, this.nodeStyle, style);\n    }\n\n    renderNode(style: any) {\n        for (const key in style) {\n            this.dom!.style[<any>key] = style[key];\n        }\n        for (const output of Object.values(this.outputConnectors)) {\n            output.renderAllLines(output.svgLines);\n        }\n    }\n\n    addNodeToCanvas(x: number, y: number) {\n\n        this.position_x = x;\n        this.position_y = y;\n        this.nodeWidth = this.dom!.offsetWidth;\n        this.nodeHeight = this.dom!.offsetHeight;\n        this.dom!.style.transform = `translate3d(${this.position_x}px, ${this.position_y}px, 0)`;\n        this.updateDOMproperties();\n\n        this.g.canvas!.appendChild(this.dom!);\n\n    }\n\n\n    addOutputConnector(dom: HTMLElement, name: string) {\n\n        const output = new OutputConnector(dom, { name: name }, this, this.g);\n        this.outputConnectors[name] = output;\n\n        this.prop[name] = null;\n        this.outputProp[name] = null;\n\n        return output;\n    }\n\n\n    addInputConnector(dom: HTMLElement, name: string) {\n        const input = new InputConnector(dom, { name: name }, this, this.g);\n        this.inputConnectors[name] = input;\n\n        this.prop[name] = null;\n\n        return input;\n    }\n\n\n    addInputForm(dom: HTMLElement, name: string) {\n        const input = new InputForm(dom, { name: name }, this, this.g);\n        this.prop[name] = null;\n\n        return input;\n    }\n\n\n    findInput(id: string): InputConnector | null {\n        for (const input of Object.values(this.inputConnectors)) {\n            if (input.name == id) {\n                return input;\n            }\n        }\n        return null;\n    }\n\n    findOutput(id: string): OutputConnector | null {\n        for (const output of Object.values(this.outputConnectors)) {\n            if (output.name == id) {\n                return output;\n            }\n        }\n        return null;\n\n    }\n\n\n    setStartPositions() {\n        this.panStartX = this.position_x;\n        this.panStartY = this.position_y;\n    }\n\n\n    customCursorDown(_: customCursorDownProp) {\n\n        console.debug(`Node class mousedown event triggered on ${this.gid}!`);\n\n        let isInFocusNodes = false;\n        for (let i = 0; i < this.g.focusNodes.length; i++) {\n            if (this.g.focusNodes[i].gid == this.gid) {\n                isInFocusNodes = true;\n                break;\n            }\n        }\n        if (!isInFocusNodes) {\n            /* If this node is not in focusNodes, then it is a regular click \n             * Unselect other nodes in focusNodes */\n            for (let i = 0; i < this.g.focusNodes.length; i++) {\n                this.g.focusNodes[i].offFocus();\n            }\n            this.g.focusNodes = [this];\n            this.onFocus();\n        } else {\n            /* Otherwise, we are dragging multiple nodes. \n             * Call the setStartPositions function for all nodes in focusNodes */\n            for (let i = 0; i < this.g.focusNodes.length; i++) {\n                this.g.focusNodes[i].setStartPositions();\n            }\n        }\n\n        this.setStartPositions();\n\n    }\n\n    domCursorUp() {\n\n        if (this.freeze) return;\n\n        this.position_x = this.panStartX + this.g.dx / this.g.zoom\n        this.position_y = this.panStartY + this.g.dy / this.g.zoom\n\n        /* If the mouse has not moved since being pressed, then it is a regular click\n            unselect other nodes in focusNodes */\n        console.debug(\"Mouse has moved: \" + this.g.mouseHasMoved);\n        if (!this.g.mouseHasMoved && this.g.targetObject && this.g.targetObject.gid == this.gid) {\n            console.debug(\"Mouse has not moved\")\n            for (let i = 0; i < this.g.focusNodes.length; i++) {\n                this.g.focusNodes[i].offFocus();\n            }\n            this.g.focusNodes = [this];\n            this.onFocus();\n            return;\n        }\n\n\n        if (this.overlapping == null) { return; }\n\n        /* Handle dropping node on line */\n        const from = this.overlapping.from;\n        const to = this.overlapping.to;\n        const firstInput = Object.values(this.inputConnectors)[0];\n        const firstOutput = Object.values(this.outputConnectors)[0];\n        from.disconnectFromInput(to);\n        from.connectToInput(firstInput);\n        firstOutput.connectToInput(to);\n\n\n    }\n\n\n    /**\n     * Fired every time requestAnimationFrame is called,\n     * if this object is being dragged.\n     * It reads the internal states like current mouse position,\n     * and updates the DOM element accordingly.\n     * @returns \n     */\n    onDrag() {\n\n        if (this.freeze) return;\n\n        this.position_x = this.panStartX + this.g.dx / this.g.zoom\n        this.position_y = this.panStartY + this.g.dy / this.g.zoom\n\n\n        this.setNodeStyle({\n            transform: `translate3d(${this.position_x}px, ${this.position_y}px, 0)`\n        });\n        // this.renderNode(this.nodeStyle);\n\n        for (const input of Object.values(this.inputConnectors)) {\n            input.nodeDrag();\n        }\n        for (const output of Object.values(this.outputConnectors)) {\n            output.nodeDrag();\n        }\n\n        this.overlapping = null;\n\n        if (Object.keys(this.inputConnectors).length == 0 && Object.keys(this.outputConnectors).length == 0) return;\n\n        let avg_height = 9999;\n        for (const line of this.g.globalLines) {\n            //line.line.classList.remove('overlapping');\n            if (isBetween(this.position_x + this.nodeWidth / 2, line.connector_x, line.connector_x + line.x2) &&\n                isBetween(this.position_y + this.nodeHeight / 2, line.connector_y, line.connector_y + line.y2)) {\n                if ((line.y2 + line.connector_x) / 2 < avg_height) {\n                    this.overlapping = line;\n                    avg_height = (line.y2 + this.position_y) / 2;\n                }\n            }\n        }\n        if (!this.overlapping) {\n            return;\n        }\n        //this.overlapping.line.classList.add('overlapping');\n\n    }\n\n    onFocus() {\n        this.dom!.classList.add('focused');\n        this.dom!.style.zIndex = \"20\";\n        this.updateDOMproperties();\n    }\n\n\n    offFocus() {\n        this.dom!.classList.remove('focused');\n        this.dom!.style.zIndex = \"10\";\n    }\n\n\n    updateDOMproperties() {\n        this.nodeHeight = this.dom!.offsetHeight;\n        this.nodeWidth = this.dom!.offsetWidth;\n        for (const input of Object.values(this.inputConnectors)) {\n            input.updateDOMproperties();\n        }\n        for (const output of Object.values(this.outputConnectors)) {\n            output.updateDOMproperties();\n        }\n    }\n\n\n    evaluate(varName: string) {\n        console.debug(\"Update all nodes connected to \" + varName);\n        const output = this.outputConnectors[varName];\n        if (!output) return;\n        for (const input of output.peerInputs) {\n            console.debug(`Update input ${input.name} connected to ${varName} with value ${this.prop[varName]}`);\n            input.prop[input.name] = this.prop[varName];\n            input.updateFunction();\n        }\n    }\n\n\n    exec() {\n\n    }\n\n\n    destroy() {\n        this.g.canvas?.removeChild(this.dom!);\n        for (const input of Object.values(this.inputConnectors)) {\n            input.destroy();\n        }\n        for (const output of Object.values(this.outputConnectors)) {\n            output.destroy();\n        }\n    }\n\n\n}\n\nexport {\n    NodeComponent\n}","\nimport { worldToCamera } from './helper.js';\nimport { GlobalStats, ObjectTypes, SnapLineDomType, mouseDownButton } from './types';\nimport { NodeComponent } from './components/node.js';\n\nimport './theme/standard_light.scss';\n// import './theme/standard_dark.scss';\n// import './theme/retro.scss';\nimport { ConnectorComponent, OutputConnector } from './components/connector.js';\n\nexport default class SnapLine {\n\n    g: GlobalStats;\n\n    canvasContainerStyle: { [key: string]: string } = {};\n    canvasStyle: { [key: string]: string } = {};\n    canvasSelectionBoxStyle: { [key: string]: string } = {};\n    canvasBackgroundStyle: { [key: string]: string } = {};\n\n    constructor() {\n\n        this.g = null as any;\n\n        this.canvasContainerStyle = {\n            position: 'relative',\n            overflow: 'hidden',\n        };\n        this.canvasSelectionBoxStyle = {\n            position: 'absolute',\n            pointerEvents: \"none\",\n        };\n\n        /* Public methods */\n        this.initSnapLine = this.initSnapLine.bind(this);\n\n\n    }\n\n\n    initSnapLine(\n        containerDom: HTMLElement,\n        canvasDom: HTMLElement,\n        backgroundDom: HTMLElement,\n        selectionBoxDom: HTMLElement\n    ) {\n\n\n\n        this.g = {\n            canvas: canvasDom,\n            canvasContainer: containerDom,\n            canvasBackground: backgroundDom,\n            selectionBox: selectionBoxDom,\n\n            currentMouseDown: mouseDownButton.none,\n            mousedown_x: 0,\n            mousedown_y: 0,\n            mouse_x: 0,\n            mouse_y: 0,\n            mouse_x_world: 0,\n            mouse_y_world: 0,\n            camera_pan_start_x: 0,\n            camera_pan_start_y: 0,\n            dx: 0,\n            dy: 0,\n            dx_offset: 0,\n            dy_offset: 0,\n\n            overrideDrag: false,\n\n            camera_x: 0,\n            camera_y: 0,\n            zoom: 1,\n            cameraWidth: 0,\n            cameraHeight: 0,\n\n            targetObject: null,\n            focusNodes: [],\n            hoverDOM: null,\n            gid: 0,\n\n            globalLines: [],\n            globalNodeList: [],\n            globalNodeTable: {},\n\n            mouseHasMoved: false,\n            ignoreMouseUp: false,\n\n            prevTouches: null,\n            prevSingleTouchTime: 0,\n\n            snapline: this,\n        }\n\n        const g = this.g;\n\n        g.cameraWidth = g.canvasContainer.clientWidth;\n        g.cameraHeight = g.canvasContainer.clientHeight;\n\n        console.debug(`Canvas size: ${g.cameraWidth}x${g.cameraHeight}`);\n\n        this.setCanvasElementStyle(this.canvasStyle, {\n            position: 'relative',\n            top: '0px',\n            left: '0px',\n            transform: `translate(${g.cameraWidth / 2}px, ${g.cameraHeight / 2}px)`,\n            width: '0px',\n            height: '0px',\n        });\n        this.setCanvasElementStyle(this.canvasBackgroundStyle, {\n            width: (g.cameraWidth * 10) + 'px',\n            height: (g.cameraHeight * 10) + 'px',\n            transform: `translate(${-g.cameraWidth * 5}px, ${-g.cameraHeight * 5}px)`,\n            transformOrigin: \"center\",\n            zIndex: \"0\",\n            position: \"absolute\",\n        });\n\n        this.renderCanvasElement(SnapLineDomType.canvasContainer, this.canvasContainerStyle);\n        this.renderCanvasElement(SnapLineDomType.canvas, this.canvasStyle);\n        this.renderCanvasElement(SnapLineDomType.canvasBackground, this.canvasBackgroundStyle);\n        this.renderCanvasElement(SnapLineDomType.selectionBox, this.canvasSelectionBoxStyle);\n\n        g.canvasContainer.addEventListener('mouseup', this.onMouseUp.bind(this));\n        g.canvasContainer.addEventListener('mousemove', this.onMouseMove.bind(this));\n        g.canvasContainer.addEventListener('mousedown', this.onMouseDown.bind(this));\n        g.canvasContainer.addEventListener('wheel', this.onWheel.bind(this));\n        g.canvasContainer.addEventListener('keydown', this.onKeyDown.bind(this));\n\n        document.addEventListener('mousemove', this.onMouseMove.bind(this));\n        document.addEventListener('mouseup', this.onMouseUp.bind(this));\n\n        g.canvasContainer.addEventListener('touchstart', this.onTouchStart.bind(this));\n        g.canvasContainer.addEventListener('touchmove', this.onTouchMove.bind(this));\n        g.canvasContainer.addEventListener('touchend', this.onTouchEnd.bind(this));\n\n        window.requestAnimationFrame(this.step.bind(this));\n    }\n\n\n    setCanvasElementStyle(curStyle: { [key: string]: string }, newStyle: { [key: string]: string }) {\n        curStyle = Object.assign({}, curStyle, newStyle);\n    }\n\n\n    renderCanvasElement(domType: SnapLineDomType, style: { [key: string]: string }) {\n        let dom: HTMLElement | null = null;\n        if (this.g == null) {\n            return;\n        }\n        switch (domType) {\n            case SnapLineDomType.canvas:\n                dom = this.g.canvas;\n                break;\n            case SnapLineDomType.canvasContainer:\n                dom = this.g.canvasContainer;\n                break;\n            case SnapLineDomType.canvasBackground:\n                dom = this.g.canvasBackground;\n                break;\n            case SnapLineDomType.selectionBox:\n                dom = this.g.selectionBox;\n                break;\n            default:\n                console.error(\"Invalid dom type: \" + domType);\n                return;\n        }\n        if (dom == null) {\n            return;\n        }\n        for (const key in style) {\n            dom.style[<any>key] = style[key];\n        }\n    }\n\n    /* Event handlers */\n\n    onTouchStart(e: TouchEvent) {\n\n        /* If multiple touches are detected, treat it as a middle mouse button press (pan camera) */\n        if (e.touches.length > 1) {\n\n            /* If there was only one touch previously, it means up until now it has been handled as a mouse press or drag.\n             * Call the cursor up handler to reset the state */\n            if (this.g.prevTouches!.length == 1) {\n                this.onCursorUp();\n            }\n\n            this.g.currentMouseDown = mouseDownButton.middle;\n\n            /* Use the middle of the two touches as the mouse position */\n            let middleX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n            let middleY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n            this.onCursorDown(mouseDownButton.middle, middleX, middleY);\n\n            this.g.prevTouches = e.touches;\n\n            return;\n        }\n\n        /* If there is only one touch, treat it as a left mouse button press */\n        this.onCursorDown(mouseDownButton.left, e.touches[0].clientX, e.touches[0].clientY);\n    }\n\n\n    onMouseDown(e: MouseEvent) {\n        let button = mouseDownButton.invalid;\n        switch (e.button) {\n            case 0:\n                button = mouseDownButton.left;\n                break;\n            case 1:\n                button = mouseDownButton.middle;\n                break;\n            default:\n                return;\n        }\n        this.onCursorDown(button, e.clientX, e.clientY);\n    }\n\n\n    /**\n     * Event handler when mouse or touchscreen is pressed.\n     * Can be called by mousedown ot touch start.\n     * Because most elements have stopPropagation on mousedown,\n     * this will only be called if the user clicks on the canvas background.\n     * \n     * Usually this means the user is performing a camera pan or selecting multiple nodes.\n     * \n     * @param button: The mouse button that was pressed.\n     * @param clientX: The x position of the cursor.\n     * @param clientY: The y position of the cursor.\n     * @returns \n     */\n    onCursorDown(button: mouseDownButton, clientX: number, clientY: number) {\n\n        this.g.currentMouseDown = button;\n\n        /*  If the user is dragging a line when another cursor down event is detected, then the line should be deleted.\n            This usually happens on touch devices with multi-touch support */\n        const tmpLine = document.querySelector('.sl-connector-svg.tmp');\n        if (tmpLine) {\n            console.debug(\"Cursor down with tmp line\");\n            const output_gid = tmpLine.getAttribute('output-gid');\n            if (output_gid != null) {\n                console.debug(\"Cursor down with tmp line and output gid: \" + output_gid);\n                const output = this.g.globalNodeTable[output_gid!];\n                if (output) {\n                    output.domCursorUp();\n                    this.onCursorUp();\n                }\n            }\n        }\n\n        const g = this.g;\n\n        if (g.overrideDrag) {\n            return;\n        }\n\n        /* Reset the selection box */\n        if (g.currentMouseDown != mouseDownButton.none) {\n            this.setCanvasElementStyle(this.canvasSelectionBoxStyle, {\n                width: '0px',\n                height: '0px',\n                left: '0px',\n                top: '0px',\n                pointerEvents: \"none\",\n                opacity: \"0\",\n            });\n        }\n\n        /* Unselect all nodes */\n        g.focusNodes = [];\n        for (const node of g.globalNodeList) {\n            node.offFocus();\n        }\n\n        g.mousedown_x = clientX;\n        g.mousedown_y = clientY;\n        g.camera_pan_start_x = g.camera_x;\n        g.camera_pan_start_y = g.camera_y;\n\n    }\n\n\n\n    onTouchMove(e: TouchEvent) {\n\n        /* Single touch move is same as mouse drag */\n        if (e.touches.length <= 0) {\n            let element = document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY);\n            this.onCursorMove(element, e.touches[0].clientX, e.touches[0].clientY);\n            this.g.prevTouches = e.touches;\n            return;\n        }\n\n        /* If there are multiple touches moving, it is a camera pan and zoom */\n\n        /*  If there are more or less than two touches, then ignore as ir is likely the user was\n            trying to drag and accidentally touched the screen with another finger */\n        if (this.g.prevTouches == null || this.g.prevTouches.length != 2) {\n            if (e.touches.length == 2)\n                this.g.prevTouches = e.touches;\n            return;\n        }\n\n        let cur1 = e.touches[0];\n        let cur2 = e.touches[1];\n\n        let prev1 = null;\n        let prev2 = null;\n\n        /* Find the previous touch positions for each finger */\n        for (let i = 0; i < e.touches.length; i++) {\n            if (cur1.identifier == this.g.prevTouches![i].identifier) {\n                prev1 = this.g.prevTouches![i];\n            } else if (cur2.identifier == this.g.prevTouches![i].identifier) {\n                prev2 = this.g.prevTouches![i];\n            }\n        }\n\n        let curDistance = Math.sqrt(Math.pow(cur1.clientX - cur2.clientX, 2) + Math.pow(cur1.clientY - cur2.clientY, 2));\n        let prevDistance = Math.sqrt(Math.pow(prev1!.clientX - prev2!.clientX, 2) + Math.pow(prev1!.clientY - prev2!.clientY, 2));\n        let d_zoom = -2 * (curDistance - prevDistance);\n\n        let middle_x = (cur1.clientX + cur2.clientX) / 2;\n        let middle_y = (cur1.clientY + cur2.clientY) / 2;\n\n        let newMouseX = middle_x - this.g.canvasContainer!.offsetLeft;\n        let newMouseY = middle_y - this.g.canvasContainer!.offsetTop;\n\n        this.onCursorMove(document.elementFromPoint(newMouseX, newMouseY), newMouseX, newMouseY);\n\n        this.g.mouse_x = newMouseX;\n        this.g.mouse_y = newMouseY;\n\n        this.onZoom(d_zoom);\n        this.g.prevTouches = e.touches;\n\n        return;\n    }\n\n    onMouseMove(e: MouseEvent) {\n        this.onCursorMove(e.target, e.clientX, e.clientY);\n    }\n\n    /**\n     * Handle cursor move events.\n     * This usually means the camera is panned or a selection box is being drawn.\n     * \n     * @param target \n     * @param clientX \n     * @param clientY \n     * @returns \n     */\n    onCursorMove(target: EventTarget | null, clientX: number, clientY: number) {\n\n        const g = this.g;\n\n        g.hoverDOM = target;\n        g.mouse_x = clientX - g.canvasContainer!.offsetLeft;\n        g.mouse_y = clientY - g.canvasContainer!.offsetTop;\n\n        /* Adjust mouse position to world coordinates */\n        let w_x = (g.mouse_x - g.cameraWidth / 2) / g.zoom + g.camera_x;\n        let w_y = (g.mouse_y - g.cameraHeight / 2) / g.zoom + g.camera_y;\n        g.mouse_x_world = w_x;\n        g.mouse_y_world = w_y;\n\n        g.dx = clientX - g.mousedown_x + g.dx_offset;\n        g.dy = clientY - g.mousedown_y + g.dy_offset;\n\n        /* Handle cases where a mouse button is pressed, i.e. dragging */\n        if (g.currentMouseDown == mouseDownButton.none || g.overrideDrag) {\n            return;\n        }\n\n        if (g.dx !== 0 || g.dy !== 0) {\n            g.mouseHasMoved = true;\n        }\n\n        /* If nothing is selected, then this drag is either a camera pan or a selection box */\n        if (g.targetObject == null) {\n            if (g.currentMouseDown == mouseDownButton.middle) {\n                // Pan camera if middle mouse button is pressed\n                g.camera_x = g.camera_pan_start_x - g.dx / g.zoom;\n                g.camera_y = g.camera_pan_start_y - g.dy / g.zoom;\n\n                this.setCanvasElementStyle(this.canvasStyle, {\n                    transform: `matrix3d(${worldToCamera(g.camera_x, g.camera_y, g)})`,\n                    cursor: \"grabbing\",\n                });\n                this.setCanvasElementStyle(this.canvasBackgroundStyle, {\n                    transform: `translate(${g.camera_x + -g.cameraWidth * 5}px, ${g.camera_y + -g.cameraHeight * 5}px)`,\n                    backgroundPosition: `${-g.camera_x}px ${-g.camera_y}px`,\n                });\n            } else if (g.currentMouseDown == mouseDownButton.left) {\n                // Select multiple boxes if left mouse button is pressed\n                this.setCanvasElementStyle(this.canvasSelectionBoxStyle, {\n                    width: Math.abs(g.dx) + 'px',\n                    height: Math.abs(g.dy) + 'px',\n                    left: Math.min(g.mousedown_x, g.mouse_x) + 'px',\n                    top: Math.min(g.mousedown_y, g.mouse_y) + 'px',\n                });\n                // Check if any nodes are inside the selection box\n                let w_x_start = (Math.min(g.mousedown_x, g.mouse_x) - g.cameraWidth / 2) / g.zoom + g.camera_x;\n                let w_y_start = (Math.min(g.mousedown_y, g.mouse_y) - g.cameraHeight / 2) / g.zoom + g.camera_y;\n\n                let w_x_end = (Math.max(w_x, g.mousedown_x, g.mouse_x) - g.cameraWidth / 2) / g.zoom + g.camera_x;\n                let w_y_end = (Math.max(w_y, g.mousedown_y, g.mouse_y) - g.cameraHeight / 2) / g.zoom + g.camera_y;\n\n                let selectedNodes = [];\n\n                /* Focus on nodes that are inside the selection box */\n                for (const node of g.globalNodeList) {\n                    if (node.position_x + node.nodeWidth > w_x_start && node.position_x < w_x_end && node.position_y + node.nodeHeight > w_y_start && node.position_y < w_y_end) {\n                        node.onFocus();\n                        selectedNodes.push(node);\n                    } else {\n                        node.offFocus();\n                    }\n                }\n                g.focusNodes = selectedNodes;\n            }\n        } else {\n            /* If an object is selected, then this drag is for that object */\n            if (g.targetObject.type == ObjectTypes.node) {\n                /* If the object being dragged is a node, then handle mouse move for all selected nodes */\n                for (const node of g.focusNodes) {\n                    node.onDrag();\n                }\n            } else {\n                /* Otherwise, just handle mouse move for the selected object */\n                g.targetObject.onDrag();\n            }\n\n        }\n\n    }\n\n    onMouseUp(_: MouseEvent) {\n        this.onCursorUp();\n    }\n\n    onTouchEnd(_: TouchEvent) {\n        this.onCursorUp();\n    }\n\n    onCursorUp() {\n        const g = this.g;\n\n        console.debug(\"Cursor up\");\n\n        if (g.ignoreMouseUp) {\n            g.ignoreMouseUp = false;\n            return;\n        }\n\n        if (g.currentMouseDown == mouseDownButton.left) {\n\n            if (g.targetObject == null) {\n                /* If nothing is selected, then this drag is a selection box */\n                this.setCanvasElementStyle(this.canvasSelectionBoxStyle, {\n                    width: '0px',\n                    height: '0px',\n                    left: '0px',\n                    top: '0px',\n                });\n            } else if (g.targetObject.type == ObjectTypes.node) {\n                /* If the object being dragged is a node, then handle mouse up for all selected nodes */\n                for (const node of g.focusNodes) {\n                    console.debug(\"Mouse up with target node: \" + node.gid);\n                    node.domCursorUp();\n                }\n            } else {\n                /* Otherwise, just handle mouse up for the selected object */\n                g.targetObject.domCursorUp();\n            }\n        }\n\n        g.currentMouseDown = mouseDownButton.none;\n\n        if (g.overrideDrag) {\n            this.setCanvasElementStyle(this.canvasStyle, {\n                cursor: \"default\",\n            });\n        }\n\n        g.overrideDrag = false;\n        this.setCanvasElementStyle(this.canvasBackgroundStyle, {\n            cursor: \"default\",\n        });\n\n        g.targetObject = null;\n        g.dx = 0;\n        g.dy = 0;\n        g.dx_offset = 0;\n        g.dy_offset = 0;\n\n        g.mouseHasMoved = false;\n\n    }\n\n\n    onWheel(e: WheelEvent) {\n        this.onZoom(e.deltaY);\n        e.preventDefault();\n    }\n\n\n    onZoom(deltaY: number = 0) {\n        const g = this.g;\n\n        let d_zoom = (1 * g.zoom) * (-deltaY / 1000);\n\n        if (g.zoom + d_zoom < 0.2) {\n            d_zoom = 0.2 - g.zoom;\n        } else if (g.zoom + d_zoom > 1) {\n            d_zoom = 1 - g.zoom;\n        }\n\n        let dz = g.zoom / (g.zoom + d_zoom);\n\n        let camera_dx = (g.cameraWidth / g.zoom * (dz - 1)) * (1 - (g.cameraWidth * 1.5 - g.mouse_x) / g.cameraWidth);\n        let camera_dy = (g.cameraHeight / g.zoom * (dz - 1)) * (1 - (g.cameraHeight * 1.5 - g.mouse_y) / g.cameraHeight);\n        g.zoom += d_zoom;\n\n        g.camera_x -= camera_dx;\n        g.camera_y -= camera_dy;\n\n        this.setCanvasElementStyle(this.canvasStyle, {\n            transform: `matrix3d(${worldToCamera(g.camera_x, g.camera_y, g)})`,\n        });\n\n    }\n\n\n    onKeyDown(e: KeyboardEvent) {\n        console.debug(\"Keydown: \" + e.key);\n        switch (e.key) {\n            case 'Backspace':\n            case 'Delete':\n\n                if (this.g.focusNodes.length > 0) {\n\n                    // this.deleteNode(g.focusNode.gid);\n                    for (const node of this.g.focusNodes) {\n                        console.debug(\"Deleting node: \" + node.gid);\n                        this.deleteNode(node.gid);\n                    }\n                }\n                break;\n        }\n    }\n\n\n    step() {\n        console.debug(\"Step\", this.g.targetObject?.type);\n        if (this.g.targetObject?.type == ObjectTypes.node) {\n            for (const node of this.g.focusNodes) {\n                node.renderNode(node.nodeStyle);\n            }\n\n        } else if (this.g.targetObject?.type == ObjectTypes.connector && this.g.targetObject instanceof OutputConnector) {\n            let output: OutputConnector = this.g.targetObject;\n            output.renderAllLines(output.svgLines);\n        }\n        this.renderCanvasElement(SnapLineDomType.canvasContainer, this.canvasContainerStyle);\n        this.renderCanvasElement(SnapLineDomType.canvas, this.canvasStyle);\n        this.renderCanvasElement(SnapLineDomType.canvasBackground, this.canvasBackgroundStyle);\n        this.renderCanvasElement(SnapLineDomType.selectionBox, this.canvasSelectionBoxStyle);\n\n        window.requestAnimationFrame(this.step.bind(this));\n    }\n\n\n    addNodeObject(): [NodeComponent, { [key: string]: NodeComponent | ConnectorComponent }] {\n        const n: NodeComponent = new NodeComponent(null, this.g);\n        this.g.globalNodeTable[n.gid] = n;\n        return [n, this.g.globalNodeTable];\n    }\n\n\n    createNode(dom: HTMLElement) {\n        const n: NodeComponent = new NodeComponent(dom, this.g);\n        this.g.globalNodeTable[n.gid] = n;\n\n        // n.domMouseDown();\n        // n.onDrag();\n        // n.domMouseUp();\n        return n;\n    }\n\n\n    createNodeAuto(dom: HTMLElement) {\n        const n: NodeComponent = new NodeComponent(dom, this.g);\n        this.g.globalNodeTable[n.gid] = n;\n\n        // Get all 'sl-input' elements\n        const inputs = dom.querySelectorAll('.sl-input');\n        for (let i = 0; i < inputs.length; i++) {\n            const inputDom = inputs[i];\n            const inputName = inputDom.getAttribute('sl-name');\n            const input = n.addInputForm(<HTMLElement>inputDom, inputName!);\n\n\n            // Loop through all attributes for ones that start with 'sl-event:<event>'\n            // If the attribute is found, add an event listener to the input connector\n            for (let j = 0; j < inputDom.attributes.length; j++) {\n                const attr = inputDom.attributes[j];\n                if (attr.name.startsWith('sl-event:')) {\n                    const event = attr.name.split(':')[1];\n                    const func = window[attr.value as keyof Window];\n                    console.debug(\"Adding event listener: \" + event);\n                    input.addInputUpdateListener(event, func);\n                }\n            }\n        }\n\n        // Get all 'sl-input-connector' elements\n        const connectors = dom.querySelectorAll('.sl-input-connector');\n        for (let i = 0; i < connectors.length; i++) {\n            const connector = connectors[i];\n            const connectorName = connector.getAttribute('sl-name');\n            const input = n.addInputConnector(<HTMLElement>connector, connectorName!);\n\n            const updateFuncName = connector.getAttribute('sl-update');\n            console.debug(\"Update function: \" + updateFuncName);\n            if (updateFuncName != null || updateFuncName != undefined) {\n                console.debug(\"Update function: \" + updateFuncName, input);\n\n                const updateFunc = window[updateFuncName! as keyof Window];\n                input.updateFunction = updateFunc.bind(input);\n            }\n\n\n        }\n\n        // Get all 'sl-output-connector' elements\n        const outputs = dom.querySelectorAll('.sl-output-connector');\n        for (let i = 0; i < outputs.length; i++) {\n            const output = outputs[i];\n            const outputName = output.getAttribute('sl-name');\n            n.addOutputConnector(<HTMLElement>output, outputName!);\n        }\n\n        for (let j = 0; j < dom.attributes.length; j++) {\n            const attr = dom.attributes[j];\n            if (attr.name.startsWith('sl-init')) {\n                const func = window[attr.value as keyof Window];\n                console.debug(\"Calling init func: \" + func);\n                func.bind(n)();\n            }\n        }\n\n\n\n        return n;\n    }\n\n    addNode(node: NodeComponent, x: number, y: number) {\n\n        node.addNodeToCanvas(x, y);\n        // n.domMouseDown();\n        // n.onDrag();\n        // n.domMouseUp();\n\n    }\n\n    addNodeAtMouse(node: NodeComponent, e: MouseEvent) {\n\n        this.g.ignoreMouseUp = true;\n\n        let x = this.g.mouse_x_world;\n        let y = this.g.mouse_y_world;\n\n        console.debug(\"Adding node at \" + x + \", \" + y);\n\n        this.addNode(node, x, y);\n        node.setStartPositions();\n\n        this.g.currentMouseDown = mouseDownButton.left;\n\n        this.g.mousedown_x = this.g.mouse_x;\n        this.g.mousedown_y = this.g.mouse_y;\n        this.g.camera_pan_start_x = this.g.camera_x;\n        this.g.camera_pan_start_y = this.g.camera_y;\n        //this.g.overrideDrag = true;\n\n        this.g.focusNodes = [node];\n        this.g.targetObject = node;\n\n        for (const node of this.g.globalNodeList) {\n            node.offFocus();\n        }\n\n        this.onMouseMove(e);\n\n        // this.g.canvasBackground!.style.cursor = \"none\";\n    }\n\n    deleteNode(id: string) {\n        if (!(id in this.g.globalNodeTable)) {\n            console.error(\"Node not found: \" + id);\n            return null;\n        }\n        this.g.globalNodeTable[id].destroy();\n        delete this.g.globalNodeTable[id];\n        return id;\n    }\n\n    focusNode(id: string) {\n        if (!(id in this.g.globalNodeTable)) return null;\n        const node = this.g.globalNodeTable[id];\n        node.onFocus();\n        return id;\n    }\n\n    connectNodes(node0: string, outputID: string, node1: string, inputID: string) {\n        const n0 = this.g.globalNodeTable[node0];\n        const n1 = this.g.globalNodeTable[node1];\n        if (!n0 || !n1 || !(n0 instanceof NodeComponent) || !(n1 instanceof NodeComponent)) {\n            return null;\n        }\n        const o = n0.findOutput(outputID);\n        const i = n1.findInput(inputID);\n\n        if (!o || !i) return null;\n\n        o.connectToInput(i);\n\n        return 0;\n    }\n\n\n}\n"],"names":[],"mappings":"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"}