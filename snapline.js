function t(t,e,o){return t>=e&&t<=o||t>=o&&t<=e}function e(t,e,o){return`${o.zoom},0,0,0,0,${o.zoom},0,0,0,0,1,0,${-t*o.zoom+o.cameraWidth/2},${-e*o.zoom+o.cameraHeight/2},0,1`}var o,n,s,i;!function(t){t.none="none",t.left="left",t.middle="middle",t.right="right",t.invalid="invalid"}(o||(o={})),function(t){t[t.node=0]="node",t[t.connector=1]="connector",t[t.line=2]="line",t[t.unspecified=3]="unspecified",t[t.inputConnector=4]="inputConnector",t[t.outputConnector=5]="outputConnector",t[t.invalid=6]="invalid"}(n||(n={})),function(t){t.idle="idle",t.dragging="dragging",t.panning="panning",t.connecting="connecting",t.selecting="selecting",t.invalid="invalid"}(s||(s={})),function(t){t[t.container=0]="container",t[t.canvas=1]="canvas",t[t.background=2]="background",t[t.selectionBox=3]="selectionBox",t[t.invalid=4]="invalid"}(i||(i={}));class r{g;gid;positionX;positionY;type;constructor(t){this.g=t,this.gid=(++t.gid).toString(),this.positionX=0,this.positionY=0,this.type=n.unspecified}bindFunction(t){t.onmousedown=this.domMouseDown.bind(this),t.ontouchstart=this.domTouchStart.bind(this)}domMouseDown(t){this.domCursorDown({button:t.button,clientX:t.clientX,clientY:t.clientY}),t.stopPropagation()}domTouchStart(t){this.domCursorDown({button:0,clientX:t.touches[0].clientX,clientY:t.touches[0].clientY}),t.stopPropagation()}domCursorDown(t){let e=t.button,n=t.clientX,s=t.clientY;0==e?this.g.currentMouseDown=o.left:1==e?this.g.currentMouseDown=o.middle:2==e&&(this.g.currentMouseDown=o.right),this.g.targetObject=this,this.g.mousedown_x=n,this.g.mousedown_y=s,this.g.dx=0,this.g.dy=0,this.g.dx_offset=0,this.g.dy_offset=0,this.componentCursorDown(t)}componentCursorDown(t){}domCursorUp(){this.componentCursorUp()}componentCursorUp(){}onFocus(){}offFocus(){}onDrag(){}onPan(){}destroy(){}}class c extends r{parent;config;dom;constructor(t,e,o){super(o),this.config=t,this.parent=e,this.dom=null}}class a extends c{name;dom;prop;constructor(t,e,o,n){super(e,o,n),this.name=e.name,this.prop=o.prop,this.dom=t}bindFunction(t){}addInputUpdateListener(t,e){this.dom.addEventListener(t,e.bind(this))}}class h extends c{name;connectorX;connectorY;connectorTotalOffsetX;connectorTotalOffsetY;prop;svgLines;type=n.connector;dom;parent;constructor(t,e,o,n){super(e,o,n),this.connectorX=0,this.connectorY=0,this.connectorTotalOffsetX=0,this.connectorTotalOffsetY=0,this.dom=t,this.parent=o,this.prop=o.prop,e.name?this.name=e.name:(n.gid++,this.name=n.gid.toString()),this.g.globalNodeTable[this.gid]=this,this.dom.setAttribute("sl-gid",this.gid.toString()),this.svgLines=[],this.bindFunction(this.dom)}pxToInt(t){return parseInt(t.substring(0,t.length-2))}getComputed(t,e){const o=window.getComputedStyle(t,null).getPropertyValue(e);return o.endsWith("px")?this.pxToInt(o):parseInt(o)}updateDOMproperties(){let t=this.dom.getBoundingClientRect(),e=this.parent.dom.getBoundingClientRect();this.connectorTotalOffsetX=(t.left-e.left)/this.g.zoom+t.width/2/this.g.zoom,this.connectorTotalOffsetY=(t.top-e.top)/this.g.zoom+t.height/2/this.g.zoom}createLineDOM(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg"),e=document.createElementNS("http://www.w3.org/2000/svg","line");return t.appendChild(e),t.classList.add("sl-connector-svg"),e.classList.add("sl-connector-line"),e.setAttribute("stroke-width","4"),this.g.canvas.appendChild(t),t}setStyle(t,e){if(t)for(const o in e)t.style[o]=e[o]}renderLinePosition(t){let e=t.svg;if(!e)return;this.setStyle(e,{position:"absolute",overflow:"visible",pointerEvents:"none",willChange:"transform",transform:`translate3d(${t.connector_x}px, ${t.connector_y}px, 0)`});let o=e.children[0];o.setAttribute("x1","0"),o.setAttribute("y1","0"),o.setAttribute("x2",""+t.x2),o.setAttribute("y2",""+t.y2)}deleteLine(t){if(this.svgLines.length>0){this.svgLines[t].requestDelete=1}}deleteAllLines(){for(const t of this.svgLines)t.requestDelete=1}}class u extends h{type=n.inputConnector;peerOutput;updateFunction=()=>{};constructor(t,e,o,n){super(t,e,o,n),this.peerOutput=null}renderAllLines(t){this.peerOutput?.renderAllLines(t)}domCursorDown(t){let e=t.button,o=t.clientX,n=t.clientY;this.peerOutput&&(super.domCursorDown({button:e,clientX:o,clientY:n}),this.g.targetObject=this.peerOutput,this.g.dx_offset=(this.connectorX-this.peerOutput.connectorX)*this.g.zoom,this.g.dy_offset=(this.connectorY-this.peerOutput.connectorY)*this.g.zoom,this.g.dx=this.g.dx_offset,this.g.dy=this.g.dy_offset,this.peerOutput.componentCursorDown({button:e,clientX:o,clientY:n}),this.peerOutput.disconnectFromInput(this))}updateConnectorPosition(){this.connectorX=this.parent.positionX+this.connectorTotalOffsetX,this.connectorY=this.parent.positionY+this.connectorTotalOffsetY}disconnectFromOutput(){this.peerOutput=null}connectToOutput(t){this.peerOutput=t}nodeDrag(){this.updateConnectorPosition(),this.peerOutput&&this.peerOutput.nodeDrag()}destroy(){this.peerOutput&&this.peerOutput.disconnectFromInput(this)}}class d extends h{val;peerInputs=[];type=n.outputConnector;constructor(t,e,o,n){super(t,e,o,n),this.val=null,this.svgLines=[],this.dom=t,this.renderAllLines=this.renderAllLines.bind(this)}connectToInput(t){this!==t.peerOutput&&(t.peerOutput&&(t.peerOutput.disconnectFromInput(t),t.disconnectFromOutput()),t.connectToOutput(this),this.peerInputs.push(t),this.updateConnectorPosition(),this.svgLines[0].to=t,this.g.globalLines.push(this.svgLines[0]))}disconnectFromInput(t){for(const e of this.svgLines)if(e.to==t){e.requestDelete=1;break}t.disconnectFromOutput(),this.peerInputs=this.peerInputs.filter((e=>e.gid!=t.gid))}updateConnectorPosition(){this.connectorX=this.parent.positionX+this.connectorTotalOffsetX,this.connectorY=this.parent.positionY+this.connectorTotalOffsetY}setLineXYPosition(t,e,o){t.x2=e,t.y2=o}refreshLinePosition(t){t.connector_x=this.connectorX,t.connector_y=this.connectorY,t.to?this.setLineXYPosition(t,t.to.connectorX-this.connectorX,t.to.connectorY-this.connectorY):this.setLineXYPosition(t,this.g.dx/this.g.zoom,this.g.dy/this.g.zoom)}refreshAllLinePositions(){this.updateConnectorPosition();for(const t of this.svgLines)this.refreshLinePosition(t)}renderAllLines(t){for(const e of t){if(e.svg){if(e.requestDelete){this.g.canvas.removeChild(e.svg);continue}}else{let t=this.createLineDOM();e.svg=t}e.connector_x=this.connectorX,e.connector_y=this.connectorY,e.to&&(e.x2=e.to.connectorX-this.connectorX,e.y2=e.to.connectorY-this.connectorY),e.svg.style.transform=`translate3d(${this.connectorX}px, ${this.connectorY}px, 0)`,this.renderLinePosition(e)}}componentCursorDown(t){this.svgLines.unshift({svg:null,to:null,from:this,connector_x:this.connectorX,connector_y:this.connectorY,x2:0,y2:0,connector:this,requestDelete:0}),this.refreshAllLinePositions()}onDrag(){let t=9999,e=0,o=0;const n=this.g.hoverDOM;if(0!=this.svgLines.length)if(n&&n.classList.contains("sl-input-connector")){const s=n.getAttribute("sl-gid");if(!s)return;const i=this.g.globalNodeTable[s];i.updateConnectorPosition(),e=i.connectorX,o=i.connectorY,t=Math.sqrt(Math.pow(this.connectorX+this.g.dx/this.g.zoom-e,2)+Math.pow(this.connectorY+this.g.dy/this.g.zoom-o,2)),t<40?this.setLineXYPosition(this.svgLines[0],e-this.connectorX,o-this.connectorY):this.setLineXYPosition(this.svgLines[0],this.g.dx/this.g.zoom,this.g.dy/this.g.zoom)}else this.setLineXYPosition(this.svgLines[0],this.g.dx/this.g.zoom,this.g.dy/this.g.zoom)}nodeDrag(){this.refreshAllLinePositions()}componentCursorUp(){const t=this.g.hoverDOM;if(t&&t.classList.contains("sl-input-connector")){const e=t.getAttribute("sl-gid");if(!e)return;const o=this.g.globalNodeTable[e];this.connectToInput(o),o.prop[o.name]=this.prop[this.name],o.updateFunction(),this.setLineXYPosition(this.svgLines[0],o.connectorX-this.connectorX,o.connectorY-this.connectorY),this.g.snapline.requestLineRender=this}else{let t=this.deleteLine(0);t&&(t.requestDelete=1)}}getValue(){return this.parent.exec(),this.val}destroy(){for(const t of this.peerInputs)this.disconnectFromInput(t)}}class l extends r{type=n.node;nodeType;dom;inputConnectors;outputConnectors;components;nodeWidth=0;nodeHeight=0;dragStartX=0;dragStartY=0;overlapping;freeze;prop;propFunc;nodeStyle;constructor(t,e){super(e),this.nodeType="",this.dom=t,this.inputConnectors={},this.outputConnectors={},this.components={},this.dragStartX=this.positionX,this.dragStartY=this.positionY,this.overlapping=null,this.freeze=0,this.prop={},this.prop=new Proxy(this.prop,{set:(t,e,o)=>{if(t[e=e.toString()]=o,e in this.outputConnectors){const t=this.outputConnectors[e].peerInputs;if(t)for(const e of t)e.parent.prop[e.name]=o}else e in this.inputConnectors&&e in this.propFunc&&this.propFunc[e]();return 1}}),this.propFunc={},this.setNodeStyle({willChange:"transform",position:"absolute",transformOrigin:"top left"}),this.g.globalNodeList.push(this),this.initNode=this.initNode.bind(this),this.addInputConnector=this.addInputConnector.bind(this),this.addOutputConnector=this.addOutputConnector.bind(this),this.addInputForm=this.addInputForm.bind(this)}initNode(t){this.dom=t,this.dom.id=this.gid,this.renderNode(this.nodeStyle),this.bindFunction(this.dom),new ResizeObserver((()=>{this.updateDOMproperties()})).observe(this.dom)}updateDOMproperties(){this.nodeHeight=this.dom.offsetHeight,this.nodeWidth=this.dom.offsetWidth;for(const t of Object.values(this.inputConnectors))t.updateDOMproperties();for(const t of Object.values(this.outputConnectors))t.updateDOMproperties()}setNodeStyle(t){this.nodeStyle=Object.assign({},this.nodeStyle,t)}renderNode(t){for(const e in t)"_"!=e[0]&&(this.dom.style[e]=t[e]);t._focus?this.dom.classList.add("focus"):this.dom.classList.remove("focus");for(const t of Object.values(this.outputConnectors))t.renderAllLines(t.svgLines),t.svgLines=t.svgLines.filter((t=>!t.requestDelete));for(const t of Object.values(this.inputConnectors)){let e=t.peerOutput;if(!e)continue;let o=e.parent.outputConnectors;for(const t of Object.values(o))t.renderAllLines(t.svgLines)}}addNodeToCanvas(t,e){this.positionX=t,this.positionY=e,this.nodeWidth=this.dom.offsetWidth,this.nodeHeight=this.dom.offsetHeight,this.setNodeStyle({transform:`translate3d(${this.positionX}px, ${this.positionY}px, 0)`}),this.renderNode(this.nodeStyle),this.updateDOMproperties(),this.g.canvas.appendChild(this.dom)}addOutputConnector(t,e){const o=new d(t,{name:e},this,this.g);return this.outputConnectors[e]=o,this.prop[e]=null,o}addInputConnector(t,e){const o=new u(t,{name:e},this,this.g);return this.inputConnectors[e]=o,this.prop[e]=null,o}addInputForm(t,e){const o=new a(t,{name:e},this,this.g);return this.prop[e]=null,o}addPropSetFunction(t,e){this.propFunc[e]=t}findInput(t){for(const e of Object.values(this.inputConnectors))if(e.name==t)return e;return null}findOutput(t){for(const e of Object.values(this.outputConnectors))if(e.name==t)return e;return null}setStartPositions(){this.dragStartX=this.positionX,this.dragStartY=this.positionY}componentCursorDown(t){let e=0;for(let t=0;t<this.g.focusNodes.length;t++)if(this.g.focusNodes[t].gid==this.gid){e=1;break}if(e)for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].setStartPositions();else{for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].offFocus();this.g.focusNodes=[this],this.onFocus()}this.setStartPositions()}componentCursorUp(){if(this.freeze)return;if(this.positionX=this.dragStartX+this.g.dx/this.g.zoom,this.positionY=this.dragStartY+this.g.dy/this.g.zoom,!this.g.mouseHasMoved&&this.g.targetObject&&this.g.targetObject.gid==this.gid){for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].offFocus();return this.g.focusNodes=[this],void this.onFocus()}if(null==this.overlapping)return;const t=this.overlapping.from,e=this.overlapping.to,o=Object.values(this.inputConnectors)[0],n=Object.values(this.outputConnectors)[0];e&&(t.disconnectFromInput(e),t.connectToInput(o),n.connectToInput(e))}onDrag(){if(this.freeze)return;this.positionX=this.dragStartX+this.g.dx/this.g.zoom,this.positionY=this.dragStartY+this.g.dy/this.g.zoom,this.setNodeStyle({transform:`translate3d(${this.positionX}px, ${this.positionY}px, 0)`});for(const t of Object.values(this.inputConnectors))t.nodeDrag();for(const t of Object.values(this.outputConnectors))t.nodeDrag();if(this.overlapping=null,0==Object.keys(this.inputConnectors).length&&0==Object.keys(this.outputConnectors).length)return;let e=9999;for(const o of this.g.globalLines)t(this.positionX+this.nodeWidth/2,o.connector_x,o.connector_x+o.x2)&&t(this.positionY+this.nodeHeight/2,o.connector_y,o.connector_y+o.y2)&&(o.y2+o.connector_x)/2<e&&(this.overlapping=o,e=(o.y2+this.positionY)/2);this.overlapping}onFocus(){this.setNodeStyle({_focus:1}),this.renderNode(this.nodeStyle)}offFocus(){this.setNodeStyle({_focus:0}),this.renderNode(this.nodeStyle)}evaluate(t){const e=this.outputConnectors[t];if(e)for(const o of e.peerInputs)o.prop[o.name]=this.prop[t],o.updateFunction()}exec(){}destroy(){this.g.canvas?.removeChild(this.dom);for(const t of Object.values(this.inputConnectors))t.destroy();for(const t of Object.values(this.outputConnectors))t.destroy()}}class p{g;containerStyle={};canvasStyle={};selectionBoxStyle={};backgroundStyle={};requestLineRender=null;constructor(){this.g=null,this.containerStyle={position:"relative",overflow:"hidden"},this.selectionBoxStyle={position:"absolute",pointerEvents:"none"},this.initSnapLine=this.initSnapLine.bind(this)}initSnapLine(t,e,n,s){this.g={canvas:e,canvasContainer:t,canvasBackground:n,selectionBox:s,currentMouseDown:o.none,mousedown_x:0,mousedown_y:0,mouse_x:0,mouse_y:0,mouse_x_world:0,mouse_y_world:0,camera_pan_start_x:0,camera_pan_start_y:0,dx:0,dy:0,dx_offset:0,dy_offset:0,overrideDrag:0,camera_x:0,camera_y:0,zoom:1,cameraWidth:0,cameraHeight:0,targetObject:null,focusNodes:[],hoverDOM:null,gid:0,globalLines:[],globalNodeList:[],globalNodeTable:{},mouseHasMoved:0,ignoreMouseUp:0,prevTouches:null,prevSingleTouchTime:0,snapline:this};const r=this.g;r.cameraWidth=r.canvasContainer.clientWidth,r.cameraHeight=r.canvasContainer.clientHeight,this.setCanvasElementStyle(i.canvas,{position:"relative",top:"0px",left:"0px",transform:`translate(${r.cameraWidth/2}px, ${r.cameraHeight/2}px)`,width:"0px",height:"0px"}),this.setCanvasElementStyle(i.background,{width:10*r.cameraWidth+"px",height:10*r.cameraHeight+"px",transform:`translate(${5*-r.cameraWidth}px, ${5*-r.cameraHeight}px)`,transformOrigin:"center",zIndex:"0",position:"absolute"}),this.renderCanvasElement(i.container,this.containerStyle),this.renderCanvasElement(i.canvas,this.canvasStyle),this.renderCanvasElement(i.background,this.backgroundStyle),this.renderCanvasElement(i.selectionBox,this.selectionBoxStyle),r.canvasContainer.addEventListener("mouseup",this.onMouseUp.bind(this)),r.canvasContainer.addEventListener("mousemove",this.onMouseMove.bind(this)),r.canvasContainer.addEventListener("mousedown",this.onMouseDown.bind(this)),r.canvasContainer.addEventListener("wheel",this.onWheel.bind(this)),r.canvasContainer.addEventListener("keydown",this.onKeyDown.bind(this)),document.addEventListener("mousemove",this.onMouseMove.bind(this)),document.addEventListener("mouseup",this.onMouseUp.bind(this)),r.canvasContainer.addEventListener("touchstart",this.onTouchStart.bind(this)),r.canvasContainer.addEventListener("touchmove",this.onTouchMove.bind(this)),r.canvasContainer.addEventListener("touchend",this.onTouchEnd.bind(this)),window.requestAnimationFrame(this.step.bind(this))}setCanvasElementStyle(t,e){switch(t){case i.canvas:this.canvasStyle=Object.assign({},this.canvasStyle,e),this.canvasStyle._requestUpdate="true";break;case i.container:this.containerStyle=Object.assign({},this.containerStyle,e),this.containerStyle._requestUpdate="true";break;case i.background:this.backgroundStyle=Object.assign({},this.backgroundStyle,e),this.backgroundStyle._requestUpdate="true";break;case i.selectionBox:this.selectionBoxStyle=Object.assign({},this.selectionBoxStyle,e),this.selectionBoxStyle._requestUpdate="true";break;default:return}}renderCanvasElement(t,e){let o=null;if(null!=this.g){switch(t){case i.canvas:o=this.g.canvas;break;case i.container:o=this.g.canvasContainer;break;case i.background:o=this.g.canvasBackground;break;case i.selectionBox:o=this.g.selectionBox;break;default:return}if(null!=o&&"true"==e._requestUpdate){for(const t in e)o.style[t]=e[t];e._requestUpdate="false"}}}onTouchStart(t){if(t.touches.length>1){1==this.g.prevTouches.length&&this.onCursorUp(),this.g.currentMouseDown=o.middle;let e=(t.touches[0].clientX+t.touches[1].clientX)/2,n=(t.touches[0].clientY+t.touches[1].clientY)/2;return this.onCursorDown(o.middle,e,n),void(this.g.prevTouches=t.touches)}this.onCursorDown(o.left,t.touches[0].clientX,t.touches[0].clientY)}onMouseDown(t){let e=o.invalid;switch(t.button){case 0:e=o.left;break;case 1:e=o.middle;break;default:return}this.onCursorDown(e,t.clientX,t.clientY)}onCursorDown(t,e,s){if(this.g.currentMouseDown=t,this.g.targetObject&&this.g.targetObject.type==n.outputConnector){this.g.targetObject.domCursorUp()}const r=this.g;if(!r.overrideDrag){r.currentMouseDown!=o.none&&this.setCanvasElementStyle(i.selectionBox,{width:"0px",height:"0px",left:"0px",top:"0px",pointerEvents:"none",opacity:"0"}),r.focusNodes=[];for(const t of r.globalNodeList)t.offFocus();r.mousedown_x=e,r.mousedown_y=s,r.camera_pan_start_x=r.camera_x,r.camera_pan_start_y=r.camera_y}}onTouchMove(t){if(t.touches.length<=0){let e=document.elementFromPoint(t.touches[0].clientX,t.touches[0].clientY);return this.onCursorMove(e,t.touches[0].clientX,t.touches[0].clientY),void(this.g.prevTouches=t.touches)}if(null==this.g.prevTouches||2!=this.g.prevTouches.length)return void(2==t.touches.length&&(this.g.prevTouches=t.touches));let e=t.touches[0],o=t.touches[1],n=null,s=null;for(let i=0;i<t.touches.length;i++)e.identifier==this.g.prevTouches[i].identifier?n=this.g.prevTouches[i]:o.identifier==this.g.prevTouches[i].identifier&&(s=this.g.prevTouches[i]);let i=-2*(Math.sqrt(Math.pow(e.clientX-o.clientX,2)+Math.pow(e.clientY-o.clientY,2))-Math.sqrt(Math.pow(n.clientX-s.clientX,2)+Math.pow(n.clientY-s.clientY,2))),r=(e.clientX+o.clientX)/2,c=(e.clientY+o.clientY)/2,a=r-this.g.canvasContainer.offsetLeft,h=c-this.g.canvasContainer.offsetTop;this.onCursorMove(document.elementFromPoint(a,h),a,h),this.g.mouse_x=a,this.g.mouse_y=h,this.onZoom(i),this.g.prevTouches=t.touches}onMouseMove(t){this.onCursorMove(t.target,t.clientX,t.clientY)}onCursorMove(t,s,r){const c=this.g;c.hoverDOM=t,c.mouse_x=s-c.canvasContainer.offsetLeft,c.mouse_y=r-c.canvasContainer.offsetTop;let a=(c.mouse_x-c.cameraWidth/2)/c.zoom+c.camera_x,h=(c.mouse_y-c.cameraHeight/2)/c.zoom+c.camera_y;if(c.mouse_x_world=a,c.mouse_y_world=h,c.dx=s-c.mousedown_x+c.dx_offset,c.dy=r-c.mousedown_y+c.dy_offset,c.currentMouseDown!=o.none&&!c.overrideDrag)if(0===c.dx&&0===c.dy||(c.mouseHasMoved=1),null==c.targetObject){if(c.currentMouseDown==o.middle)c.camera_x=c.camera_pan_start_x-c.dx/c.zoom,c.camera_y=c.camera_pan_start_y-c.dy/c.zoom,this.setCanvasElementStyle(i.canvas,{transform:`matrix3d(${e(c.camera_x,c.camera_y,c)})`,cursor:"grabbing"}),this.setCanvasElementStyle(i.background,{transform:`translate(${c.camera_x+5*-c.cameraWidth}px, ${c.camera_y+5*-c.cameraHeight}px)`,backgroundPosition:`${-c.camera_x}px ${-c.camera_y}px`});else if(c.currentMouseDown==o.left){this.setCanvasElementStyle(i.selectionBox,{width:Math.abs(c.dx)+"px",height:Math.abs(c.dy)+"px",left:Math.min(c.mousedown_x,c.mouse_x)+"px",top:Math.min(c.mousedown_y,c.mouse_y)+"px",opacity:"1"});let t=(Math.min(c.mousedown_x,c.mouse_x)-c.cameraWidth/2)/c.zoom+c.camera_x,e=(Math.min(c.mousedown_y,c.mouse_y)-c.cameraHeight/2)/c.zoom+c.camera_y,o=(Math.max(a,c.mousedown_x,c.mouse_x)-c.cameraWidth/2)/c.zoom+c.camera_x,n=(Math.max(h,c.mousedown_y,c.mouse_y)-c.cameraHeight/2)/c.zoom+c.camera_y,s=[];for(const i of c.globalNodeList)i.positionX+i.nodeWidth>t&&i.positionX<o&&i.positionY+i.nodeHeight>e&&i.positionY<n?(i.onFocus(),s.push(i)):i.offFocus();c.focusNodes=s}}else if(c.targetObject.type==n.node)for(const t of c.focusNodes)t.onDrag();else c.targetObject.onDrag()}onMouseUp(t){this.onCursorUp()}onTouchEnd(t){this.onCursorUp()}onCursorUp(){const t=this.g;if(t.ignoreMouseUp)t.ignoreMouseUp=0;else{if(t.currentMouseDown==o.left){if(null==t.targetObject)this.setCanvasElementStyle(i.selectionBox,{width:"0px",height:"0px",left:"0px",top:"0px"});else if(t.targetObject.type==n.node)for(const e of t.focusNodes)e.domCursorUp();else t.targetObject.domCursorUp();t.targetObject?.type==n.outputConnector&&(this.requestLineRender=t.targetObject)}t.currentMouseDown=o.none,t.overrideDrag&&this.setCanvasElementStyle(i.canvas,{cursor:"default"}),t.overrideDrag=0,this.setCanvasElementStyle(i.background,{cursor:"default"}),t.targetObject=null,t.dx=0,t.dy=0,t.dx_offset=0,t.dy_offset=0,t.mouseHasMoved=0}}onWheel(t){this.onZoom(t.deltaY),t.preventDefault()}onZoom(t=0){const o=this.g;let n=1*o.zoom*(-t/1e3);o.zoom+n<.2?n=.2-o.zoom:o.zoom+n>1&&(n=1-o.zoom);let s=o.zoom/(o.zoom+n),r=o.cameraWidth/o.zoom*(s-1)*(1-(1.5*o.cameraWidth-o.mouse_x)/o.cameraWidth),c=o.cameraHeight/o.zoom*(s-1)*(1-(1.5*o.cameraHeight-o.mouse_y)/o.cameraHeight);o.zoom+=n,o.camera_x-=r,o.camera_y-=c,this.setCanvasElementStyle(i.canvas,{transform:`matrix3d(${e(o.camera_x,o.camera_y,o)})`})}onKeyDown(t){switch(t.key){case"Backspace":case"Delete":if(this.g.targetObject?.type!=n.node)return;if(this.g.focusNodes.length>0)for(const t of this.g.focusNodes)this.deleteNode(t.gid)}}renderElements(){const t=this.g.targetObject;if(this.requestLineRender||t?.type!=n.outputConnector||(this.requestLineRender=t),t?.type==n.node)for(const t of this.g.focusNodes)t.renderNode(t.nodeStyle);else if(this.requestLineRender){let t=this.requestLineRender;t.renderAllLines(t.svgLines),t.svgLines=t.svgLines.filter((t=>!t.requestDelete))}}step(){this.renderElements(),this.renderCanvasElement(i.container,this.containerStyle),this.renderCanvasElement(i.canvas,this.canvasStyle),this.renderCanvasElement(i.background,this.backgroundStyle),this.renderCanvasElement(i.selectionBox,this.selectionBoxStyle),window.requestAnimationFrame(this.step.bind(this))}addNodeObject(){const t=new l(null,this.g);return this.g.globalNodeTable[t.gid]=t,[t,this.g.globalNodeTable]}createNode(t){const e=new l(t,this.g);return this.g.globalNodeTable[e.gid]=e,e}createNodeAuto(t){const e=new l(t,this.g);this.g.globalNodeTable[e.gid]=e;const o=t.querySelectorAll(".sl-input");for(let t=0;t<o.length;t++){const n=o[t],s=n.getAttribute("sl-name"),i=e.addInputForm(n,s);for(let t=0;t<n.attributes.length;t++){const e=n.attributes[t];if(e.name.startsWith("sl-event:")){const t=e.name.split(":")[1],o=window[e.value];i.addInputUpdateListener(t,o)}}}const n=t.querySelectorAll(".sl-input-connector");for(let t=0;t<n.length;t++){const o=n[t],s=o.getAttribute("sl-name"),i=e.addInputConnector(o,s),r=o.getAttribute("sl-update");if(null!=r||null!=r){const t=window[r];i.updateFunction=t.bind(i)}}const s=t.querySelectorAll(".sl-output-connector");for(let t=0;t<s.length;t++){const o=s[t],n=o.getAttribute("sl-name");e.addOutputConnector(o,n)}for(let o=0;o<t.attributes.length;o++){const n=t.attributes[o];if(n.name.startsWith("sl-init")){window[n.value].bind(e)()}}return e}addNode(t,e,o){t.addNodeToCanvas(e,o)}addNodeAtMouse(t,e){this.g.ignoreMouseUp=1;let n=this.g.mouse_x_world,s=this.g.mouse_y_world;this.addNode(t,n,s),t.setStartPositions(),this.g.currentMouseDown=o.left,this.g.mousedown_x=this.g.mouse_x,this.g.mousedown_y=this.g.mouse_y,this.g.camera_pan_start_x=this.g.camera_x,this.g.camera_pan_start_y=this.g.camera_y,this.g.focusNodes=[t],this.g.targetObject=t;for(const t of this.g.globalNodeList)t.offFocus();this.onMouseMove(e)}deleteNode(t){return t in this.g.globalNodeTable?(this.g.globalNodeTable[t].destroy(),delete this.g.globalNodeTable[t],t):null}focusNode(t){if(!(t in this.g.globalNodeTable))return null;return this.g.globalNodeTable[t].onFocus(),t}connectNodes(t,e,o,n){const s=this.g.globalNodeTable[t],i=this.g.globalNodeTable[o];if(!(s&&i&&s instanceof l&&i instanceof l))return null;const r=s.findOutput(e),c=i.findInput(n);return r&&c?(r.connectToInput(c),0):null}}export{p as default};
