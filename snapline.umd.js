!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(t="undefined"!=typeof globalThis?globalThis:t||self).SnapLineJs=s()}(this,(function(){"use strict";var t,s,i,h,e,n,o,r=Object.defineProperty,a=t=>{throw TypeError(t)},l=(t,s,i)=>((t,s,i)=>s in t?r(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i),c=(t,s,i)=>s.has(t)?a("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(t):s.set(t,i),u=(t,s,i)=>(((t,s,i)=>{s.has(t)||a("Cannot "+i)})(t,s,"access private method"),i),d=(t=>(t[t.node=0]="node",t[t.connector=1]="connector",t[t.line=2]="line",t[t.unspecified=3]="unspecified",t[t.inputConnector=4]="inputConnector",t[t.outputConnector=5]="outputConnector",t[t.invalid=6]="invalid",t))(d||{}),f=(t=>(t[t.none=0]="none",t[t.mouseLeft=1]="mouseLeft",t[t.mouseMiddle=2]="mouseMiddle",t[t.mouseRight=3]="mouseRight",t[t.touchSingle=4]="touchSingle",t[t.touchDouble=5]="touchDouble",t[t.invalid=4]="invalid",t))(f||{});class p{constructor(t,s){l(this,"_dom"),l(this,"_document"),l(this,"_onCursorDown"),l(this,"_onCursorMove"),l(this,"_onCursorUp"),l(this,"_onScroll"),l(this,"_onRotate"),l(this,"_onKeyDown"),l(this,"_pointerMode"),l(this,"_currentCursorState"),l(this,"_sortedTouchArray"),l(this,"_sortedTouchDict"),t.addEventListener("wheel",this.onWheel.bind(this)),t.addEventListener("keydown",this.onKeyDown.bind(this)),s.addEventListener("mousedown",this.onMouseDown.bind(this)),s.addEventListener("mousemove",this.onMouseMove.bind(this)),s.addEventListener("mouseup",this.onMouseUp.bind(this)),s.addEventListener("touchstart",this.onTouchStart.bind(this)),s.addEventListener("touchmove",this.onTouchMove.bind(this)),s.addEventListener("touchend",this.onTouchEnd.bind(this)),this.t=null,this.i=null,this.h=null,this.o=null,this.l=null,this.u=null,this.p=0,this.m="none",this._=t,this.C=s,this.v=[],this.S={}}D(t,s){null==t||t(s,s.target,this.convertMouseToCursorState(s.button),s.clientX,s.clientY)}M(t,s,i){null==t||t(s,s.target,this.convertMouseToCursorState(s.button),s.clientX,s.clientY,i)}setCursorDownCallback(t){this.t=t}setCursorMoveCallback(t){this.i=t}setCursorUpCallback(t){this.h=t}setScrollCallback(t){this.o=t}setRotateCallback(t){this.l=t}setKeyDownCallback(t){this.u=t}convertMouseToCursorState(t){switch(t){case 0:return 1;case 1:return 2;case 2:return 3;default:return 0}}onMouseDown(t){var s;null==(s=this.t)||s.call(this,t,t.target,this.convertMouseToCursorState(t.button),t.clientX,t.clientY)}onMouseMove(t){var s;const i=this.C.elementFromPoint(t.clientX,t.clientY);null==(s=this.i)||s.call(this,t,i,this.convertMouseToCursorState(t.button),t.clientX,t.clientY)}onMouseUp(t){var s;null==(s=this.h)||s.call(this,t,t.target,this.convertMouseToCursorState(t.button),t.clientX,t.clientY)}onWheel(t){var s;null==(s=this.o)||s.call(this,t,t.target,2,t.clientX,t.clientY,t.deltaY)}onKeyDown(t){var s;null==(s=this.u)||s.call(this,t)}onTouchStart(t){var s,i,h;const e=t.changedTouches,n=this.v.length;for(let o=0;o<e.length;o++){const t=e[o];if(t){const s={x:t.clientX,y:t.clientY,target:t.target,identifier:t.identifier};this.v.unshift(s),this.S[t.identifier]=s}}if(1!==this.v.length)if(2!==this.v.length);else{1===n&&(null==(i=this.h)||i.call(this,t,this.v[1].target,1,this.v[1].x,this.v[1].y));const s=(this.v[0].x+this.v[1].x)/2,e=(this.v[0].y+this.v[1].y)/2;null==(h=this.t)||h.call(this,t,this.v[0].target,2,s,e)}else null==(s=this.t)||s.call(this,t,this.v[0].target,1,this.v[0].x,this.v[0].y)}onTouchMove(t){var s,i,h;const e=t.touches,n=this.v.length>0?{...this.v[0]}:null,o=this.v.length>1?{...this.v[1]}:null;for(let u=0;u<e.length;u++){const t=e[u];if(t){const s=this.S[t.identifier];s.x=t.clientX,s.y=t.clientY,s.target=t.target}}if(1===this.v.length)return void(null==(s=this.i)||s.call(this,t,this.v[0].target,1,this.v[0].x,this.v[0].y));if(this.v.length<2)return;const r=(this.v[0].x+this.v[1].x)/2,a=(this.v[0].y+this.v[1].y)/2,l=Math.sqrt(Math.pow(this.v[0].x-this.v[1].x,2)+Math.pow(this.v[0].y-this.v[1].y,2));let c=0;if(n&&o){c=l-Math.sqrt(Math.pow(n.x-o.x,2)+Math.pow(n.y-o.y,2))}null==(i=this.i)||i.call(this,t,this.v[0].target,2,r,a),null==(h=this.o)||h.call(this,t,this.v[0].target,2,r,a,c)}onTouchEnd(t){var s,i;const h=[];for(let o=0;o<t.changedTouches.length;o++){const s=t.changedTouches[o];s&&h.push(s.identifier)}const e=this.v.filter((t=>h.includes(t.identifier))),n=this.v.length;this.v=this.v.filter((t=>!h.includes(t.identifier)));for(let o of h)delete this.S[o];if(e.length>0){if(1===n)return void(null==(s=this.h)||s.call(this,t,e[0].target,1,e[0].x,e[0].y));2===n&&(null==(i=this.h)||i.call(this,t,e[0].target,2,e[0].x,e[0].y))}}}class m{constructor(t){l(this,"g"),l(this,"gid"),l(this,"positionX"),l(this,"positionY"),l(this,"_type"),this.g=t,this.gid=(++t.gid).toString(),this.positionX=0,this.positionY=0,this.k=d.unspecified}bindFunction(t){t.ontouchstart=this.domTouchStart.bind(this),t.onmousedown=this.domMouseDown.bind(this)}domMouseDown(t){this.domCursorDown({button:t.button,clientX:t.clientX,clientY:t.clientY}),t.stopPropagation()}domTouchStart(t){var s;this.domCursorDown({button:0,clientX:t.touches[0].clientX,clientY:t.touches[0].clientY}),null==(s=this.g.snapline.L)||s.onTouchStart(t),t.stopPropagation()}domCursorDown(t){const s=t.button,i=t.clientX,h=t.clientY;0==s?this.g.O=f.mouseLeft:1==s?this.g.O=f.mouseMiddle:2==s&&(this.g.O=f.mouseRight),this.g.targetObject=this,[this.g.mousedown_x,this.g.mousedown_y]=this.g.camera.getCameraFromScreen(i,h),this.g.dx=0,this.g.dy=0,this.g.dx_offset=0,this.g.dy_offset=0,this.P(t)}P(t){}domCursorUp(){this.$()}$(){}onFocus(){}offFocus(){}T(){}onPan(){}delete(){}}class g extends m{constructor(t,s){super(s),l(this,"parent"),l(this,"dom"),this.parent=t,this.dom=null}}function _(t,s){const i=Object.assign({},t,s);return i.F="true",i}function C(t,s,i,h=!1){for(const e in t)h?s.bind(i)(t[e],e):s.bind(i)(t[e])}function v(t,s){for(const i in s)"_"!=i[0]&&(t.style[i]=s[i])}class w extends g{constructor(s,i,h,e,n,o){super(h,e),c(this,t),l(this,"config"),l(this,"name"),l(this,"connectorX"),l(this,"connectorY"),l(this,"_connectorTotalOffsetX"),l(this,"_connectorTotalOffsetY"),l(this,"prop"),l(this,"outgoingLines"),l(this,"incomingLines"),l(this,"_type",d.connector),l(this,"dom"),l(this,"parent"),this.dom=s,this.parent=h,this.prop=h.W,this.outgoingLines=n,this.incomingLines=o,this.config=i,e.gid++,this.name=i.name||e.gid.toString(),this.g.globalNodeTable[this.gid]=this,this.dom.setAttribute("data-snapline-gid",this.gid.toString()),this.dom.setAttribute("data-snapline-type","connector"),this.connectorX=0,this.connectorY=0,this.N=0,this.U=0,this.X(),this.bindFunction(this.dom),this.connectToConnector=this.connectToConnector.bind(this),this.disconnectFromConnector=this.disconnectFromConnector.bind(this)}updateFunction(){}P(t){const s=this.incomingLines.filter((t=>!t.requestDelete));s.length>0?this.startPickUpLine(s[0]):this.config.allowDragOut&&this.startDragOutLine()}T(){this.runDragOutLine()}$(){this.endDragOutLine(),this.parent.Y()}B(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg"),s=document.createElementNS("http://www.w3.org/2000/svg","line");return t.appendChild(s),t.setAttribute("data-snapline-type","connector-svg"),s.setAttribute("data-snapline-type","connector-line"),s.setAttribute("stroke-width","4"),this.g.canvas.appendChild(t),t}X(){const t=this.dom.getBoundingClientRect();if(!this.parent._)return;const s=this.parent._.getBoundingClientRect(),[i,h]=this.g.camera.getWorldDeltaFromCameraDelta(t.left-s.left,t.top-s.top),[e,n]=this.g.camera.getWorldDeltaFromCameraDelta(t.width/2,t.height/2);this.N=i+e,this.U=h+n,this.connectorX=this.parent.positionX+this.N,this.connectorY=this.parent.positionY+this.U}deleteLine(t){if(0==this.outgoingLines.length)return;const s=this.outgoingLines[t];return s.requestDelete=!0,s}deleteAllLines(){for(const t of this.outgoingLines)t.requestDelete=!0}R(t){const s=t.svg;if(!s)return;v(s,{position:"absolute",overflow:"visible",pointerEvents:"none",willChange:"transform",transform:`translate3d(${t.x1}px, ${t.y1}px, 0)`});const i=s.children[0];i.setAttribute("x1","0"),i.setAttribute("y1","0"),i.setAttribute("x2",""+(t.x2-t.x1)),i.setAttribute("y2",""+(t.y2-t.y1))}j(i){if(i.x1=i.start.connectorX,i.y1=i.start.connectorY,i.target)u(this,t,s).call(this,i,i.target.connectorX,i.target.connectorY);else{const[h,e]=this.g.camera.getWorldFromCamera(this.g.mousedown_x+this.g.dx,this.g.mousedown_y+this.g.dy);u(this,t,s).call(this,i,h,e)}}A(){this.X();for(const t of this.outgoingLines)this.j(t);for(const t of this.incomingLines)t.start.j(t)}createLine(t){return{svg:t,target:null,start:this,x1:this.connectorX,y1:this.connectorY,x2:0,y2:0,connector:this,requestDelete:!1,completedDelete:!1}}startDragOutLine(){this.outgoingLines.unshift(this.createLine(null)),this.A()}runDragOutLine(){let i=9999,h=0,e=0;const n=this.g.hoverDOM;if(0==this.outgoingLines.length)return;const[o,r]=this.g.camera.getWorldFromCamera(this.g.mousedown_x+this.g.dx,this.g.mousedown_y+this.g.dy);if(n&&"connector"==n.getAttribute("data-snapline-type")){const a=n.getAttribute("data-snapline-gid");if(!a)return;const l=this.g.globalNodeTable[a];l.X(),h=l.connectorX,e=l.connectorY,i=Math.sqrt(Math.pow(this.connectorX+o-h,2)+Math.pow(this.connectorY+r-e,2)),i<40?u(this,t,s).call(this,this.outgoingLines[0],h,e):u(this,t,s).call(this,this.outgoingLines[0],o,r)}else u(this,t,s).call(this,this.outgoingLines[0],o,r)}endDragOutLine(){const i=this.g.hoverDOM;if(i&&"connector"==i.getAttribute("data-snapline-type")){const h=i.getAttribute("data-snapline-gid");if(!h)return;const e=this.g.globalNodeTable[h];if(0==this.connectToConnector(e,this.outgoingLines[0]))return void this.deleteLine(0);e.prop[e.name]=this.prop[this.name],e.updateFunction(),u(this,t,s).call(this,this.outgoingLines[0],e.connectorX,e.connectorY)}else this.deleteLine(0);this.parent.H(this.outgoingLines,this.name)}startPickUpLine(t){this.g.targetObject=t.start,t.start.disconnectFromConnector(this),this.disconnectFromConnector(t.start),this.deleteLine(this.incomingLines.indexOf(t)),t.start.startDragOutLine()}connectToConnector(t,s){const i=t.incomingLines.filter((t=>!t.requestDelete));return!i.some((t=>t.start==this))&&(t.config.maxConnectors!==i.length&&(null==s&&(s=this.createLine(null),this.outgoingLines.unshift(s)),this.X(),s.target=t,t.incomingLines.push(s),!0))}disconnectFromConnector(t){for(const s of this.outgoingLines)if(s.target==t){s.requestDelete=!0;break}}}t=new WeakSet,s=function(t,s,i){t.x2=s,t.y2=i};class x extends g{constructor(t,s,i,h={}){super(s,i),l(this,"name"),l(this,"dom"),l(this,"prop"),this.name=h.name||"",this.prop=s.W,this.dom=t}bindFunction(t){}addInputUpdateListener(t,s){this.dom.addEventListener(t,s.bind(this))}}class b extends m{constructor(t,s,h,e,n={}){super(e),c(this,i),l(this,"_type",d.node),l(this,"_config"),l(this,"_dom"),l(this,"_connectors"),l(this,"_components"),l(this,"_allOutgoingLines"),l(this,"_allIncomingLines"),l(this,"_nodeWidth",0),l(this,"_nodeHeight",0),l(this,"_dragStartX",0),l(this,"_dragStartY",0),l(this,"_freeze"),l(this,"_prop"),l(this,"_propSetCallback"),l(this,"_nodeStyle"),this.I=n,this._=t,this.K={},this.q={},this.Z={},this.G={},this.positionX=s,this.positionY=h,this.J=this.positionX,this.V=this.positionY,this.tt=!1,this.W={},this.st={},this.it({willChange:"transform",position:"absolute",transformOrigin:"top left"}),this.g.globalNodeList.push(this),this.init=this.init.bind(this),this.addConnector=this.addConnector.bind(this),this.addInputForm=this.addInputForm.bind(this),this.addSetPropCallback=this.addSetPropCallback.bind(this),this.delete=this.delete.bind(this),this.onFocus=this.onFocus.bind(this),this.offFocus=this.offFocus.bind(this),this.getConnector=this.getConnector.bind(this),this.getLines=this.getLines.bind(this),this.getNodeStyle=this.getNodeStyle.bind(this),this.getProp=this.getProp.bind(this),this.setProp=this.setProp.bind(this),this.setRenderNodeCallback=this.setRenderNodeCallback.bind(this),this.setRenderLinesCallback=this.setRenderLinesCallback.bind(this),this.it({transform:`translate3d(${this.positionX}px, ${this.positionY}px, 0)`}),this._&&this.init(this._)}it(t){this.ht=_(this.ht,t)}et(t){for(let s=0;s<t.length;s++)t[s].requestDelete&&(t.splice(s,1),s--)}H(t,s){for(const i of t){const t=i.start;if(i.svg||i.requestDelete){if(i.requestDelete&&!i.completedDelete&&i.svg){this.g.canvas.removeChild(i.svg),i.completedDelete=!0;continue}}else i.svg=t.B();i.svg&&(i.x1=t.connectorX,i.y1=t.connectorY,i.target&&(i.x2=i.target.connectorX,i.y2=i.target.connectorY),i.svg.style.transform=`translate3d(${t.connectorX}px, ${t.connectorY}px, 0)`,t.R(i))}this.et(t)}Y(){C(this.Z,this.H,this),C(this.G,(t=>{for(const s of t){const t=s.start.parent;C(t.Z,t.H,t)}}),this)}nt(t){this._&&(v(this._,t),t.ot?this._.setAttribute("data-snapline-state","focus"):this._.setAttribute("data-snapline-state","idle"),this.Y())}P(t){var s;let h=!1;for(let i=0;i<this.g.focusNodes.length;i++)if(this.g.focusNodes[i].gid==this.gid){h=!0;break}if(h)for(let n=0;n<this.g.focusNodes.length;n++)u(s=this.g.focusNodes[n],i,e).call(s);else{for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].offFocus();this.g.focusNodes=[this],this.onFocus()}u(this,i,e).call(this)}$(){if(this.tt)return;const[t,s]=this.g.camera.getWorldDeltaFromCameraDelta(this.g.dx,this.g.dy);if(this.positionX=this.J+t,this.positionY=this.V+s,!this.g.mouseHasMoved&&this.g.targetObject&&this.g.targetObject.gid==this.gid){for(let t=0;t<this.g.focusNodes.length;t++)this.g.focusNodes[t].offFocus();return this.g.focusNodes=[this],void this.onFocus()}this.nt(this.ht)}T(){if(this.tt)return;const[t,s]=this.g.camera.getWorldDeltaFromCameraDelta(this.g.dx,this.g.dy);this.positionX=this.J+t,this.positionY=this.V+s,this.it({transform:`translate3d(${this.positionX}px, ${this.positionY}px, 0)`});for(const i of Object.values(this.K))i.A();Object.keys(this.K).length}init(t){var s;this._=t,this._.id=this.gid,t.setAttribute("data-snapline-type","node"),t.setAttribute("data-snapline-state","idle"),(null==(s=this.I)?void 0:s.nodeClass)&&t.setAttribute("data-snapline-class",this.I.nodeClass),this.nt(this.ht),this.bindFunction(this._),new ResizeObserver((()=>{u(this,i,h).call(this),this.nt(this.ht)})).observe(this._)}setRenderNodeCallback(t){this.nt=s=>{t(s),this.Y()}}setRenderLinesCallback(t){this.H=(s,i)=>{this.et(s),t(s,i)}}getConnector(t){return t in this.K?this.K[t]:null}onFocus(){this.it({ot:!0}),this.nt(this.ht)}offFocus(){this.it({ot:!1}),this.nt(this.ht)}addConnector(t,s,i=1,h=!0){this.Z[s]=[],this.G[s]=[];const e=new w(t,{name:s,maxConnectors:i,allowDragOut:h},this,this.g,this.Z[s],this.G[s]);return this.K[s]=e,this.W[s]=null,e}addInputForm(t,s){const i=new x(t,this,this.g,{name:s});return this.W[s]=null,i}addSetPropCallback(t,s){this.st[s]=t}delete(){var t;null==(t=this.g.canvas)||t.removeChild(this._);for(const s of Object.values(this.K))s.delete()}getLines(){return this.Z}getNodeStyle(){return this.ht}getProp(t){return this.W[t]}setProp(t,s){if(t in this.st&&this.st[t](s),this.W[t]=s,!(t in this.K))return;const i=this.K[t].outgoingLines.filter((t=>t.target&&!t.requestDelete)).map((t=>t.target));if(i)for(const h of i)h&&(h.parent.W[h.name]=s,h.parent.st[h.name]&&h.parent.st[h.name](s))}}i=new WeakSet,h=function(){if(this._){this.rt=this._.offsetHeight,this.lt=this._.offsetWidth;for(const t of Object.values(this.K))t.X()}},e=function(){this.J=this.positionX,this.V=this.positionY};class y{constructor(t,s){l(this,"containerDom"),l(this,"containerOffsetX"),l(this,"containerOffsetY"),l(this,"canvasDom"),l(this,"cameraWidth"),l(this,"cameraHeight"),l(this,"cameraPositionX"),l(this,"cameraPositionY"),l(this,"cameraPanStartX"),l(this,"cameraPanStartY"),l(this,"zoom"),l(this,"canvasStyle");let i=t.getBoundingClientRect();this.containerDom=t,this.containerOffsetX=i.left,this.containerOffsetY=i.top,this.canvasDom=s,this.cameraWidth=i.width,this.cameraHeight=i.height,this.cameraPositionX=0,this.cameraPositionY=0,this.cameraPanStartX=0,this.cameraPanStartY=0,this.zoom=1,this.canvasStyle="",this.updateCamera()}worldToCameraMatrix(t,s,i,h,e){return`${i},0,0,0,0,${i},0,0,0,0,1,0,${-t*i+h/2},${-s*i+e/2},0,1`}updateCamera(){const t=this.worldToCameraMatrix(this.cameraPositionX,this.cameraPositionY,this.zoom,this.containerDom.clientWidth,this.containerDom.clientHeight);this.canvasStyle=`matrix3d(${t})`}handleScroll(t,s,i){this.zoom+t<.2?t=.2-this.zoom:this.zoom+t>1&&(t=1-this.zoom);const h=this.zoom/(this.zoom+t);this.cameraPositionX-=this.cameraWidth/this.zoom*(h-1)*(1-(1.5*this.cameraWidth-s)/this.cameraWidth),this.cameraPositionY-=this.cameraHeight/this.zoom*(h-1)*(1-(1.5*this.cameraHeight-i)/this.cameraHeight),this.zoom+=t,this.updateCamera()}handlePan(t,s){this.cameraPositionX+=t/this.zoom,this.cameraPositionY+=s/this.zoom,this.updateCamera()}handlePanStart(){this.cameraPanStartX=this.cameraPositionX,this.cameraPanStartY=this.cameraPositionY}handlePanDrag(t,s){this.cameraPositionX=-t/this.zoom+this.cameraPanStartX,this.cameraPositionY=-s/this.zoom+this.cameraPanStartY,this.updateCamera()}handlePanEnd(){this.cameraPanStartX=0,this.cameraPanStartY=0}getCameraFromWorld(t,s){return[(t-this.cameraPositionX)*this.zoom+this.cameraWidth/2,(s-this.cameraPositionY)*this.zoom+this.cameraHeight/2]}getScreenFromCamera(t,s){return[t+this.containerOffsetX,s+this.containerOffsetY]}getWorldFromCamera(t,s){return[(t-this.cameraWidth/2)/this.zoom+this.cameraPositionX,(s-this.cameraHeight/2)/this.zoom+this.cameraPositionY]}getCameraFromScreen(t,s){return[t-=this.containerOffsetX,s-=this.containerOffsetY]}getCameraDeltaFromWorldDelta(t,s){return[t*this.zoom,s*this.zoom]}getWorldDeltaFromCameraDelta(t,s){return[t/this.zoom,s/this.zoom]}}return n=new WeakSet,o=function(){this.ct(),this.ut(this.dt),this.ft(this.gt),this._t(this.Ct),window.requestAnimationFrame(u(this,n,o).bind(this))},class{constructor(){c(this,n),l(this,"g"),l(this,"_containerStyle",{}),l(this,"_canvasStyle",{}),l(this,"_selectionBoxStyle",{}),l(this,"_backgroundStyle",{}),l(this,"_inputControl",null),this.g={},this.vt={position:"relative",overflow:"hidden"},this.Ct={position:"absolute",pointerEvents:"none"},this.init=this.init.bind(this),this.setRenderCanvasCallback=this.setRenderCanvasCallback.bind(this),this.setRenderBackgroundCallback=this.setRenderBackgroundCallback.bind(this),this.setRenderSelectionBoxCallback=this.setRenderSelectionBoxCallback.bind(this)}wt(t){this.dt=_(this.dt,t)}xt(t){this.gt=_(this.gt,t)}bt(t){this.Ct=_(this.Ct,t)}t(t,s,i,h,e){if(s!==this.g.canvasContainer&&s!==this.g.canvasBackground)return;if(this.g.O=i,this.g.targetObject&&this.g.targetObject.k==d.connector){this.g.targetObject.domCursorUp()}const n=this.g;if(!n.overrideDrag){n.O!=f.none&&this.bt({width:"0px",height:"0px",left:"0px",top:"0px",pointerEvents:"none",opacity:"0"}),n.focusNodes=[];for(const t of n.globalNodeList)t.offFocus();[n.mousedown_x,n.mousedown_y]=this.g.camera.getCameraFromScreen(h,e),i!=f.mouseMiddle&&i!=f.touchDouble||this.g.camera.handlePanStart()}}i(t,s,i,h,e){const n=this.g;if(n.hoverDOM=document.elementFromPoint(h,e),[n.mouseCameraX,n.mouseCameraY]=this.g.camera.getCameraFromScreen(h,e),[n.mouseWorldX,n.mouseWorldY]=this.g.camera.getWorldFromCamera(n.mouseCameraX,n.mouseCameraY),n.dx=n.mouseCameraX-n.mousedown_x,n.dy=n.mouseCameraY-n.mousedown_y,0===n.dx&&0===n.dy||(n.mouseHasMoved=!0),null==n.targetObject){if(n.O==f.mouseMiddle||n.O==f.touchDouble)this.g.camera.handlePanDrag(n.dx,n.dy),this.wt({transform:this.g.camera.canvasStyle,cursor:"grabbing"}),this.xt({transform:`translate(${this.g.camera.cameraPositionX+5*-this.g.camera.cameraWidth}px, ${this.g.camera.cameraPositionY+5*-this.g.camera.cameraHeight}px)`,backgroundPosition:`${-this.g.camera.cameraPositionX}px ${-this.g.camera.cameraPositionY}px`});else if(n.O==f.mouseLeft||n.O==f.touchSingle){let[t,s]=[Math.min(n.mousedown_x,n.mouseCameraX),Math.min(n.mousedown_y,n.mouseCameraY)];this.bt({width:Math.abs(n.dx)+"px",height:Math.abs(n.dy)+"px",left:t+"px",top:s+"px",opacity:"1",position:"absolute"});const[i,h]=this.g.camera.getWorldFromCamera(t,s),[e,o]=this.g.camera.getWorldFromCamera(Math.max(n.mousedown_x,n.mouseCameraX),Math.max(n.mousedown_y,n.mouseCameraY)),r=[];for(const a of n.globalNodeList)a.positionX+a.lt>i&&a.positionX<e&&a.positionY+a.rt>h&&a.positionY<o?(a.onFocus(),r.push(a)):a.offFocus();n.focusNodes=r}}else if(n.targetObject.k==d.node)for(const o of n.focusNodes)o.T();else n.targetObject.T()}h(t,s,i,h,e){const n=this.g;if(n.ignoreMouseUp)n.ignoreMouseUp=!1;else{if(n.O==f.mouseLeft||n.O==f.touchSingle)if(null==n.targetObject)this.bt({width:"0px",height:"0px",left:"0px",top:"0px"});else if(n.targetObject.k==d.node)for(const t of n.focusNodes)t.domCursorUp();else n.targetObject.domCursorUp();else n.O!=f.mouseMiddle&&n.O!=f.touchDouble||this.g.camera.handlePanEnd();n.O=f.none,n.overrideDrag&&this.wt({cursor:"default"}),n.overrideDrag=!1,this.wt({cursor:"default"}),n.targetObject=null,n.dx=0,n.dy=0,n.dx_offset=0,n.dy_offset=0,n.mouseHasMoved=!1}}yt(t,s,i,h,e,n){this.g.camera.handleScroll(n/1e3,this.g.mouseCameraX,this.g.mouseCameraY),this.wt({transform:this.g.camera.canvasStyle})}ut(t){v(this.g.canvas,t)}ft(t){v(this.g.canvasBackground,t)}_t(t){v(this.g.selectionBox,t)}ct(){const t=this.g.targetObject;if(null!=t)if(t.k==d.node)for(const s of this.g.focusNodes)s.nt(s.ht);else if(t.k==d.connector){this.g.targetObject.parent.Y()}}init(t,s,i,h){this.g={canvas:s,canvasContainer:t,canvasBackground:i,selectionBox:h,O:f.none,mousedown_x:0,mousedown_y:0,mouseCameraX:0,mouseCameraY:0,mouseWorldX:0,mouseWorldY:0,dx:0,dy:0,dx_offset:0,dy_offset:0,camera:new y(t,s),overrideDrag:!1,targetObject:null,focusNodes:[],hoverDOM:null,gid:0,globalNodeList:[],globalNodeTable:{},mouseHasMoved:!1,ignoreMouseUp:!1,prevTouches:null,prevSingleTouchTime:0,snapline:this},this.wt({position:"relative",top:"0px",left:"0px",width:"0px",height:"0px",transform:this.g.camera.canvasStyle}),this.xt({width:10*this.g.camera.cameraWidth+"px",height:10*this.g.camera.cameraHeight+"px",transform:`translate(${5*-this.g.camera.cameraWidth}px, ${5*-this.g.camera.cameraHeight}px)`,transformOrigin:"center",position:"absolute"}),this.ut(this.dt),this.ft(this.gt),this._t(this.Ct),this.L=new p(t,document),this.L.setCursorDownCallback(this.t.bind(this)),this.L.setCursorMoveCallback(this.i.bind(this)),this.L.setCursorUpCallback(this.h.bind(this)),this.L.setScrollCallback(this.yt.bind(this)),window.requestAnimationFrame(u(this,n,o).bind(this))}createNode(t=null,s=0,i=0,h){const e=new b(t,s,i,this.g,h);return this.g.globalNodeTable[e.gid]=e,e}deleteNode(t){if(!(t in this.g.globalNodeTable))return!1;this.g.globalNodeTable[t].delete();const{[t]:s,...i}=this.g.globalNodeTable;return this.g.globalNodeTable=i,!0}focusNode(t){if(!(t in this.g.globalNodeTable))return!1;return this.g.globalNodeTable[t].onFocus(),!0}setRenderCanvasCallback(t){this.ut=t}setRenderBackgroundCallback(t){this.ft=t}setRenderSelectionBoxCallback(t){this._t=t}}}));
